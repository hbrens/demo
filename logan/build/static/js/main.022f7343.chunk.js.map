{"version":3,"sources":["common/components/Sider/new_logan_logo_white.png","views/components/log-detail-page/components/loglist-infinite-scroll/style.module.scss","views/native-list/redux/initial-state.js","views/native-list/redux/reducer.js","views/native-log-detail/redux/initial-state.js","views/native-log-detail/redux/reducer.js","views/web-list/redux/initial-state.js","views/web-list/redux/reducer.js","views/web-detail/redux/initial-state.js","views/web-detail/redux/reducer.js","store.js","common/components/ClickShare/ClickShare.js","views/components/list-page/components/header-bar/index.js","views/components/list-page/index.js","common/api.js","views/native-list/redux/action.js","views/native-list/index.js","common/util.js","consts/pagination.js","consts/logtypes.js","common/adapter.js","views/components/log-detail-page/components/filter-bar/index.js","views/components/log-detail-page/components/log-detail-card/index.js","views/components/log-detail-page/components/log-information/index.js","views/components/log-detail-page/components/loglist-infinite-scroll/index.js","views/components/log-detail-page/components/loglist-infinite-scroll/consts.js","views/components/log-detail-page/components/time-minimap/index.js","views/components/log-detail-page/index.js","views/native-log-detail/index.js","views/native-log-detail/redux/action.js","views/web-list/redux/action.js","views/web-list/index.js","views/web-detail/index.js","views/web-detail/redux/action.js","common/components/Sider/Sider.js","app.js","index.js"],"names":["module","exports","initialState","filterConditions","deviceId","platform","beginTime","moment","startOf","subtract","endTime","tasks","loading","state","arguments","length","undefined","action","type","_objectSpread","logInfo","logDownloadUrl","logTypes","logTypesInTask","briefs","taskDetails","logDetail","focusLogId","highlightStartIndex","highlightEndIndex","keyword","sorted","direction","concat","slicedDetails","slice","initState","composeEnhancers","composeWithDevTools","history","createHashHistory","store","createStore","combineReducers","router","connectRouter","nativeList","nativeListReducer","nativeLogDetail","nativeLogDetailReducer","webList","webListReducer","webLogDetail","webLogDetailReducer","applyMiddleware","routerMiddleware","thunk","lastSuccTime","Date","now","ClickShare","Component","constructor","clipboard","render","buttonId","shareUrl","buttonStyle","icon","buttonText","this","props","React","createElement","Button","id","data-clipboard-text","style","color","backgroundColor","Icon","componentDidMount","Clipboard","on","message","success","setState","componentWillUnmount","destroy","Option","Select","RangePicker","DatePicker","Header","Layout","HeaderBar","composeShareUrl","pathname","window","location","origin","valueOf","handleSearch","fetchTasks","error","handleDeviceIdChange","e","updateFilterConditions","target","value","handleCleanDeviceId","handlePlatformChange","handleTimeRangeChange","beginMoment","endMoment","diff","warn","className","Input","Group","compact","data-test","onChange","minWidth","allowClear","format","placeholder","suffix","key","onClick","defaultProps","connect","search","hash","Column","Table","ICON_BY_PLATFORM","ListPage","renderNativeColumns","size","dataSource","pagination","scroll","y","rowKey","title","dataIndex","width","renderColumnPlatform","renderColumnLogDate","renderColumnAddTime","renderColumnAction","renderWebColumns","renderColumnWebSource","renderColumnEnvironment","webSource","environment","logDate","addTime","text","record","index","toDetail","taskId","detailUrlPrefix","push","pendingRequests","instance","axios","create","baseURL","process","timeout","withCredentials","fetchNativeTaskInfoByTaskIdApi","get","fetchNativeTaskBriefsByTaskIdApi","params","fetchNativeTaskDetailsByDetailIdsApi","detailIds","fetchNativeSingleLogDetailByLogIdApi","logId","fetchNativeDownloadUrlApi","fetchWebBriefsApi","fetchWebTaskDetailsByDetailIdsApi","fetchWebTaskInfoByTaskIdApi","fetchWebSingleLogDetailByLogIdApi","detailId","RemovePendingRequest","config","forEach","request","idx","url","method","cancel","splice","fetchInitData","dispatch","then","data","_ref","getState","console","log","fetchNativeTaskApi","interceptors","use","headers","cancelOthers","cancelToken","CancelToken","c","AddPendingRequest","removeXRequestedWith","response","code","msg","Number","warning","Promise","reject","status","NativeList","componentDidCatch","errorInfo","replace","parse","ignoreQueryPrefix","some","item","every","parseInt","Object","assign","newFilterConditions","getPageOfLogIdsBySingleLogId","singleLogId","indexOfBrief","findIndex","pageNum","Math","ceil","indexOfPage","floor","map","nativeLogTypeConfigs","logType","logTypeName","displayColor","webLogTypeConfigs","convertBriefsToMinimapBriefs","ret","LogTypeRules","brief","find","rule","time","logTime","convertBriefsToLoglistInfiniteScrollBriefs","RadioGroup","Radio","FilterBar","logTypeDropdownVisible","sortedDropdownVisible","keywordTemp","handleLogTypesChanged","checkedItems","onFilterConditionChanged","previousLogTypes","result","includes","filter","handleSortedChange","onSortedChanged","rollingListManually","handleKeywordClear","searchCursor","handleKeywordTempChange","handleKeywordSearchConfirm","LOGTYPES_CONFIG","LogTypeMultiCheck","Checkbox","selectable","Row","Col","Divider","margin","sortedMultiCheck","name","Dropdown","overlay","trigger","visible","onVisibleChange","flag","flex","prefix","cursor","onPressEnter","titleByKey","LogDetailCard","handleCloseButtonClicked","updateFocusLogId","conposeSnippetComponents","logTypesConfig","cardTitle","closeButton","shape","metaDatas","keys","Card","extra","Panel","Collapse","LogInformation","panelHeader","maxWidth","textOverflow","unionId","bordered","accordion","header","appId","appVersion","platformNameByPlatformId","numeral","amount","customReportInfo","Map","set","LogListInfiniteScroll","super","loadMore","needFocus","fetchTaskDetail","upHasMore","downHasMore","isUp","mouseUpRolling","lastUploadTime","uploading","lastDownloadTime","downloading","pageSize","startIndex","endIndex","startPageIndex","endPageIndex","highlightPairs","getHeadAndBottomLogIdInView","startLogId","updateHighLightIndex","logHeadAndBottomInView","getLogHeadAndBottomInView","startLogIndex","endLogIndex","logList","logIndexList","scrollTopOfLogList","document","querySelector","scrollTop","heightOfView","clientHeight","numberOfLogBeforeHead","max","round","numberOfLogInView","logHead","min","logBottom","logIndexItem","endLogId","calculateIndexOfLogList","details","passiveSupported","options","defineProperty","passive","addEventListener","err","event","wheelDelta","shouldComponentUpdate","nextProps","nextState","nextContext","isEqual","componentDidUpdate","prevProps","prevState","snapshot","InfiniteScroll","initialLoad","pageStart","hasMore","useWindow","isReverse","threshold","Timeline","marginTop","TimelineItem","Spin","Item","preventDefault","stopPropagation","simpleContent","content","TimeMiniMap","onMouseMove","_isInTimeline","offsetX","offsetY","logIndex","_calculateLogIndexFromCoordinate","timelineMarginTop","localName","showToolTip","toolTipX","$container","clientWidth","offsetLeft","toolTipY","clientY","hoveredLog","hoverMark","isVisible","show","hide","stage","draw","_prepareContainer","_prepareHoverMark","Konva","Line","points","timelineLeftOffset","timelineWidth","stroke","strokeWidth","timeline","add","_prepareLocator","startX","startY","_calculateCoordinateFromLogIndex","endX","endY","locator","Rect","x","height","opacity","fill","_initComponents","timelineMarginBottom","Stage","container","offsetWidth","offsetHeight","Layer","clearBeforeDraw","timelineHeight","getHeight","_renderOutline","_renderBeginEndTimeStamp","_renderLogLines","_initMouseEvent","timelineLeftBorder","timelineRightBorder","clone","move","startTime","Text","fontFamily","fontSize","lineCanvasHeightSpan","i","logLine","isHorizontalInner","isVerticalInner","lineCssHeightSpan","outOfLineRange","Fragment","display","LogTooltip","showing","removeEventListener","containerStyle","position","left","top","border","borderRadius","padding","lineHeight","zIndex","LogDetailPage","$listScroll","nextScrollTop","scrollTo","handleBackToListButtonClicked","nativeListFilterConditions","webListFilterConditions","isEmpty","isNil","handleLogDownloadButtonClicked","downloadUrlPromise","fetchWebDownloadUrlApi","open","_calculateUpHasMoreAndDownHasMore","pageIndex","updateSorted","NativeLogDetail","fetchPageInitData","all","infoData","logTypeData","briefData","flattenDeep","_ref2","join","_ref3","detailData","logTypeInTask","Set","topLogId","newBriefs","start","end","sortedBriefs","sortBy","reverse","_ref4","_ref5","fetchWebTaskApi","WebList","WebLogDetail","Sider","selectedKeys","handleMenuClick","sider","logo","Menu","theme","mode","defaultSelectedKeys","backgroundImage","image","backgroundRepeat","backgroundSize","textAlign","App","ConnectedRouter","Switch","Redirect","exact","from","to","Route","path","component","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.022f7343.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new_logan_logo_white.6ea001ee.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inifinite-scroll-container\":\"style_inifinite-scroll-container__1NIvN\",\"container-inner\":\"style_container-inner__2JpS2\",\"log-search-arrow\":\"style_log-search-arrow__1fE6Z\",\"log-type\":\"style_log-type__2avzd\",\"log-time\":\"style_log-time__1wZHZ\",\"log-tag\":\"style_log-tag__1RzRe\",\"log-id\":\"style_log-id__1blPo\",\"log-time-title-right\":\"style_log-time-title-right__2s56u\",\"log-time-title-left\":\"style_log-time-title-left__1Lt0b\",\"log-abbr\":\"style_log-abbr__39om2\",\"detail-button\":\"style_detail-button__2OmhM\",\"log-time-title\":\"style_log-time-title__1EA_t\",\"log-content\":\"style_log-content__WthWr\",\"timeline-item\":\"style_timeline-item__1tOSk\",\"scroll-content\":\"style_scroll-content__1ESK3\"};","import moment from \"moment\";\n\nexport const initialState = {\n  filterConditions: {\n    deviceId: \"\",\n    platform: 0,\n    beginTime: moment().startOf(\"day\").subtract(7, 'days'),\n    endTime: moment().startOf(\"day\")\n  },\n  tasks: [],\n  loading: false\n};","import {initialState} from \"./initial-state\";\n\n\nexport const NATIVE_UPDATE_TASKS = \"NATIVE_UPDATE_TASKS\";\nexport const NATIVE_UPDATE_FILTER_CONDITIONS = \"NATIVE_UPDATE_FILTER_CONDITIONS\";\nexport const NATIVE_CHANGE_LOADING = \"NATIVE_CHANGE_LOADING\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case NATIVE_UPDATE_TASKS:\n      return {\n        ...state,\n        tasks: action.tasks\n      };\n    case NATIVE_UPDATE_FILTER_CONDITIONS:\n      return {\n        ...state,\n        filterConditions: action.filterConditions\n      };\n    case NATIVE_CHANGE_LOADING:\n      return {\n        ...state,\n        loading: action.loading\n      };\n    default:\n      return state;\n  }\n};\n","export const initialState = {\n  // meta data of task\n  logInfo: null,\n\n  // url of log to download\n  logDownloadUrl: \"\",\n\n  // all valid log types\n  logTypes: [],\n\n  // log types in current task\n  logTypesInTask: [],\n\n  // briefs of current task\n  briefs: [],\n\n  // details in this page of current task\n  taskDetails: [],\n\n  // single log detail (related to focus log)\n  logDetail: null,\n\n  // focused log id\n  focusLogId: -1,\n\n  // start index of taskDetails in infinite scroll view\n  highlightStartIndex: -1,\n\n  // end index of taskDetails in infinite scroll view\n  highlightEndIndex: -1,\n\n  filterConditions: {\n    keyword: \"\",\n    logTypes: [],\n  },\n\n  // whether the log should sorted, true stands for ascending order \n  sorted: true\n};","import { initialState } from \"./initial-state\";\n\nexport const NATIVE_UPDATE_LOG_INFO = \"NATIVE_UPDATE_LOG_INFO\";\nexport const NATIVE_UPDATE_LOG_DOWNLOAD_URL = \"NATIVE_UPDATE_LOG_DOWNLOAD_URL\";\nexport const NATIVE_UPDATE_LOG_TYPES = \"NATIVE_UPDATE_LOG_TYPES\";\nexport const NATIVE_UPDATE_BRIEFS = \"NATIVE_UPDATE_BRIEFS\";\nexport const NATIVE_UPDATE_TASK_DETAIL = \"NATIVE_UPDATE_TASK_DETAIL\";\nexport const NATIVE_UPDATE_LOG_DETAIL = \"NATIVE_UPDATE_LOG_DETAIL\";\nexport const NATIVE_UPDATE_HIGH_LIGHT_INDEX = \"NATIVE_UPDATE_HIGH_LIGHT_INDEX\";\nexport const NATIVE_UPDATE_FOCUS_LOG_ID = \"NATIVE_UPDATE_FOCUS_LOG_ID\";\nexport const NATIVE_UPDATE_LOGDETAIL_FILTER_CONDITIONS = \"NATIVE_UPDATE_LOGDETAIL_FILTER_CONDITIONS\";\nexport const NATIVE_UPDATE_LOG_TYPES_IN_TASK = \"NATIVE_UPDATE_LOG_TYPES_IN_TASK\";\nexport const NATIVE_INITIAL_STATE = \"NATIVE_INITIAL_STATE\";\nexport const NATIVE_UPDATE_SORTED = \"NATIVE_UPDATE_SORTED\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case NATIVE_UPDATE_LOG_INFO:\n      return {\n        ...state,\n        logInfo: action.logInfo\n      };\n    case NATIVE_UPDATE_LOG_DOWNLOAD_URL:\n      return {\n        ...state,\n        logDownloadUrl: action.logDownloadUrl\n      };\n    case NATIVE_UPDATE_LOG_TYPES:\n      return {\n        ...state,\n        logTypes: action.logTypes\n      };\n    case NATIVE_UPDATE_BRIEFS:\n      return {\n        ...state,\n        briefs: action.briefs\n      };\n    case NATIVE_UPDATE_TASK_DETAIL:\n      if (action.direction === \"up\") {\n        let taskDetails = action.taskDetails.concat(state.taskDetails);\n        let slicedDetails = taskDetails;\n        if (taskDetails.length > 150) {\n          slicedDetails = taskDetails.slice(0, 150)\n        }\n        return {\n          ...state,\n          taskDetails: slicedDetails\n        };\n      } else if (action.direction === \"down\") {\n        let taskDetails = state.taskDetails.concat(action.taskDetails);\n        let slicedDetails = taskDetails;\n        if (taskDetails.length > 150) {\n          slicedDetails = taskDetails.slice(taskDetails.length - 150, taskDetails.length);\n        }\n        return {\n          ...state,\n          taskDetails: slicedDetails\n        };\n      } else {\n        return {\n          ...state,\n          taskDetails: action.taskDetails\n        };\n      }\n    case NATIVE_UPDATE_LOG_DETAIL:\n      return {\n        ...state,\n        logDetail: action.logDetail\n      };\n    case NATIVE_UPDATE_HIGH_LIGHT_INDEX:\n      return {\n        ...state,\n        highlightStartIndex: action.highlightStartIndex,\n        highlightEndIndex: action.highlightEndIndex\n      };\n    case NATIVE_UPDATE_FOCUS_LOG_ID:\n      return {\n        ...state,\n        focusLogId: action.focusLogId\n      };\n    case NATIVE_UPDATE_LOGDETAIL_FILTER_CONDITIONS:\n      return {\n        ...state,\n        filterConditions: action.filterConditions\n      };\n    case NATIVE_UPDATE_LOG_TYPES_IN_TASK:\n      return {\n        ...state,\n        logTypesInTask: action.logTypesInTask\n      };\n    case NATIVE_INITIAL_STATE:\n      return {\n        ...initialState\n      };\n    case NATIVE_UPDATE_SORTED:\n      return {\n        ...state,\n        sorted: action.sorted\n      };\n    default:\n      return state;\n  }\n};\n","import moment from \"moment\";\n\nexport const initialState = {\n  filterConditions: {\n    deviceId: \"\",\n    beginTime: moment().startOf(\"day\"),\n    endTime: moment().startOf(\"day\")\n  },\n  tasks: [],\n  loading: false\n};","import {initialState as initState} from \"./initial-state\";\n\n\nexport const WEB_UPDATE_TASKS = \"WEB_UPDATE_TASKS\";\nexport const WEB_UPDATE_FILTER_CONDITIONS = \"WEB_UPDATE_FILTER_CONDITIONS\";\nexport const WEB_CHANGE_LOADING = \"WEB_CHANGE_LOADING\";\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case WEB_UPDATE_TASKS:\n      return {\n        ...state,\n        tasks: action.tasks\n      };\n    case WEB_UPDATE_FILTER_CONDITIONS:\n      return {\n        ...state,\n        filterConditions: action.filterConditions\n      };\n    case WEB_CHANGE_LOADING:\n      return {\n        ...state,\n        loading: action.loading\n      };\n    default:\n      return state;\n  }\n};","export const initialState = {\n  logInfo: null,\n  logTypesInTask: [],\n  briefs: [],\n  taskDetails: [],\n  logDetail: null,\n\n  highlightStartIndex: -1,\n  highlightEndIndex: -1,\n  focusLogId: -1,\n\n  filterConditions: {\n    keyword: \"\",\n    logTypes: [],\n  },\n  sorted: true\n\n};","import { initialState } from \"./initial-state\";\n\nexport const WEB_UPDATE_LOG_INFO = \"WEB_UPDATE_LOG_INFO\";\nexport const WEB_UPDATE_BRIEFS = \"WEB_UPDATE_BRIEFS\";\nexport const WEB_UPDATE_TASK_DETAIL = \"WEB_UPDATE_TASK_DETAIL\";\nexport const WEB_UPDATE_LOG_DETAIL = \"WEB_UPDATE_LOG_DETAIL\";\nexport const WEB_UPDATE_HIGH_LIGHT_INDEX = \"WEB_UPDATE_HIGH_LIGHT_INDEX\";\nexport const WEB_UPDATE_FOCUS_LOG_ID = \"WEB_UPDATE_FOCUS_LOG_ID\";\nexport const WEB_UPDATE_LOGDETAIL_FILTER_CONDITIONS = \"WEB_UPDATE_LOGDETAIL_FILTER_CONDITIONS\";\nexport const WEB_UPDATE_LOG_TYPES_IN_TASK = \"WEB_UPDATE_LOG_TYPES_IN_TASK\";\nexport const WEB_INITIAL_STATE = \"WEB_INITIAL_STATE\";\nexport const WEB_UPDATE_SORTED = \"WEB_UPDATE_SORTED\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case WEB_UPDATE_LOG_INFO:\n      return {\n        ...state,\n        logInfo: action.logInfo\n      };\n    case WEB_UPDATE_BRIEFS:\n      return {\n        ...state,\n        briefs: action.briefs\n      };\n    case WEB_UPDATE_TASK_DETAIL:\n      if (action.direction === \"up\") {\n        let taskDetails = action.taskDetails.concat(state.taskDetails);\n        let slicedDetails = taskDetails;\n        if (taskDetails.length > 150) {\n          slicedDetails = taskDetails.slice(0, 150)\n        }\n        return {\n          ...state,\n          taskDetails: slicedDetails\n        };\n      } else if (action.direction === \"down\") {\n        let taskDetails = state.taskDetails.concat(action.taskDetails);\n        let slicedDetails = taskDetails;\n        if (taskDetails.length > 150) {\n          slicedDetails = taskDetails.slice(taskDetails.length - 150, taskDetails.length);\n        }\n        return {\n          ...state,\n          taskDetails: slicedDetails\n        };\n      } else {\n        return {\n          ...state,\n          taskDetails: action.taskDetails\n        };\n      }\n    case WEB_UPDATE_LOG_DETAIL:\n      return {\n        ...state,\n        logDetail: action.logDetail\n      };\n    case WEB_UPDATE_HIGH_LIGHT_INDEX:\n      return {\n        ...state,\n        highlightStartIndex: action.highlightStartIndex,\n        highlightEndIndex: action.highlightEndIndex\n      };\n    case WEB_UPDATE_FOCUS_LOG_ID:\n      return {\n        ...state,\n        focusLogId: action.focusLogId\n      };\n    case WEB_UPDATE_LOGDETAIL_FILTER_CONDITIONS:\n      return {\n        ...state,\n        filterConditions: action.filterConditions\n      };\n    case WEB_UPDATE_LOG_TYPES_IN_TASK:\n      return {\n        ...state,\n        logTypesInTask: action.logTypesInTask\n      };\n    case WEB_INITIAL_STATE:\n      return {\n        ...initialState\n      };\n    case WEB_UPDATE_SORTED:\n      return {\n        ...state,\n        sorted: action.sorted\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createHashHistory } from \"history\"\nimport thunk from \"redux-thunk\";\n\nimport nativeListReducer from \"./views/native-list/redux/reducer\";\nimport nativeLogDetailReducer from \"./views/native-log-detail/redux/reducer\";\nimport webListReducer from \"./views/web-list/redux/reducer\";\nimport webLogDetailReducer from \"./views/web-detail/redux/reducer\";\n\nconst composeEnhancers = composeWithDevTools({});\n\nexport const history = createHashHistory();\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  nativeList: nativeListReducer,\n  nativeLogDetail: nativeLogDetailReducer,\n  webList: webListReducer,\n  webLogDetail: webLogDetailReducer\n});\n\nlet store = createStore(\n  createRootReducer(history),\n  composeEnhancers(\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n);\n\nexport default store;","import \"antd/dist/antd.css\";\nimport React, { Component } from \"react\";\nimport { message, Button, Icon } from \"antd\";\nimport Clipboard from \"clipboard\";\nlet lastSuccTime = Date.now();\n\nclass ClickShare extends Component {\n  state = {\n    clipboard: null\n  };\n\n  render() {\n    const {buttonId, shareUrl, buttonStyle, icon, buttonText} = this.props;\n    const defaultButtonStyle = {\n      color: \"#fff\",\n      backgroundColor: \"#52c41a\"\n    }\n    return (\n      <Button\n        id={buttonId}\n        data-clipboard-text={shareUrl}\n        style={ buttonStyle || defaultButtonStyle }\n      >\n        {icon === false ? \"\" : <Icon type=\"share-alt\" />}\n        {buttonText}\n      </Button>\n    );\n  }\n\n  componentDidMount() {\n    const clipboard = new Clipboard(\"#\" + this.props.buttonId);\n    clipboard.on(\"success\", () => {\n      if (Date.now() - lastSuccTime > 1000) {\n        message.success(\"链接已复制到剪贴板\", 2);\n        lastSuccTime = Date.now();\n      }\n    });\n    this.setState(clipboard);\n  }\n\n  componentWillUnmount() {\n    this.state.clipboard && this.state.clipboard.destroy();\n  }\n}\n\nexport default ClickShare;\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Input, Select, DatePicker, Icon, Layout, Button, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./style.scss\";\nimport ClickShare from \"../../../../../common/components/ClickShare/ClickShare\"\nimport moment from \"moment\";\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst { Header } = Layout;\n\nclass HeaderBar extends Component {\n\n  static propTypes = {\n    filterConditions: PropTypes.object,\n    updateFilterConditions: PropTypes.func,\n    fetchTasks: PropTypes.func,\n    type: PropTypes.string\n  };\n\n  static defaultProps = {\n    filterConditions: {\n      deviceId: \"\",\n      platform: 0,\n      beginTime: moment().startOf(\"week\"),\n      endTime: moment().startOf(\"day\")\n    },\n    updateFilterConditions: null,\n    fetchTasks: null\n  };\n\n  render() {\n    const { filterConditions, type } = this.props;\n    return (\n      <Header className=\"header\">\n        <div className=\"tasklist-filterbar-container\">\n          <Input.Group compact className=\"filterbar-group\">\n            {\n              type === \"native\" &&\n              <Select\n                data-test=\"platform-selector\"\n                value={filterConditions.platform}\n                onChange={this.handlePlatformChange}\n                style={{ minWidth: \"100px\" }}\n              >\n                <Option value={0}>全部平台</Option>\n                <Option value={1}>Android</Option>\n                <Option value={2}>iOS</Option>\n              </Select>\n            }\n            <RangePicker\n              data-test=\"range-picker\"\n              allowClear={false}\n              format=\"YYYY-MM-DD\"\n              placeholder={[\"起始时间\", \"结束时间\"]}\n              onChange={this.handleTimeRangeChange}\n              value={[moment(filterConditions.beginTime), moment(filterConditions.endTime)]}\n              style={{ minWidth: \"240px\" }}\n            />\n            <Input\n              data-test=\"deviceId-input\"\n              className=\"filter-input\"\n              placeholder=\"设备编号\"\n              value={filterConditions.deviceId}\n              onChange={this.handleDeviceIdChange}\n              suffix={\n                filterConditions.deviceId ? (\n                  <Icon\n                    data-test=\"clean-deviceId-icon\"\n                    className=\"empty-search\"\n                    key=\"empty-search\"\n                    type=\"close-circle\"\n                    onClick={this.handleCleanDeviceId}\n                  />\n                ) : (\n                  <span />\n                )\n              }\n            />\n          </Input.Group>\n          <Button data-test=\"search-button\" icon=\"search\" type=\"primary\" onClick={this.handleSearch}>\n            搜索\n          </Button>\n        </div>\n        <ClickShare buttonId={\"share-button\"} shareUrl={this.composeShareUrl()} buttonText={\"分享\"} />\n      </Header>\n    );\n  }\n\n  composeShareUrl = () => {\n    const {filterConditions, type, pathname} = this.props;\n    if (type === \"native\") {\n      return `${window.location.origin}/#${pathname}?deviceId=${filterConditions.deviceId}&beginTime=${moment(filterConditions.beginTime).valueOf()}&endTime=${moment(filterConditions.endTime).valueOf()}&platform=${filterConditions.platform}`\n    } else {\n      return `${window.location.origin}/#${pathname}?deviceId=${filterConditions.deviceId}&beginTime=${moment(filterConditions.beginTime).valueOf()}&endTime=${moment(filterConditions.endTime).valueOf()}`\n    }\n  };\n\n  // event handlers\n  handleSearch = () => {\n    const { filterConditions, fetchTasks, type } = this.props;\n    if (filterConditions.deviceId === \"\") {\n      message.error(\"必须填写设备编号才能进行查询！\");\n      return;\n    }\n    if (type === \"native\") {\n      fetchTasks({\n        deviceId: filterConditions.deviceId,\n        platform: filterConditions.platform,\n        beginTime: moment(filterConditions.beginTime).valueOf(),\n        endTime: moment(filterConditions.endTime).valueOf()\n      });\n    } else {\n      fetchTasks({\n        deviceId: filterConditions.deviceId,\n        beginTime: moment(filterConditions.beginTime).valueOf(),\n        endTime: moment(filterConditions.endTime).valueOf()\n      })\n    }\n\n  };\n\n  handleDeviceIdChange = e => {\n    const { filterConditions, updateFilterConditions } = this.props;\n\n    updateFilterConditions({\n      ...filterConditions,\n      deviceId: e.target.value\n    });\n  };\n\n  handleCleanDeviceId = () => {\n    const { filterConditions, updateFilterConditions } = this.props;\n\n    updateFilterConditions({\n      ...filterConditions,\n      deviceId: \"\"\n    });\n  };\n\n  handlePlatformChange = value => {\n    const { filterConditions, updateFilterConditions } = this.props;\n\n    updateFilterConditions({\n      ...filterConditions,\n      platform: value\n    });\n  };\n\n  handleTimeRangeChange = value => {\n    const { filterConditions, updateFilterConditions } = this.props;\n    const [beginMoment, endMoment] = value;\n\n    if (endMoment.diff(beginMoment) >= 7 * 86400000) {\n      message.warn(\"请保证选择的时间范围不超过7天\");\n      return;\n    }\n    updateFilterConditions({\n      ...filterConditions,\n      beginTime: beginMoment.valueOf(),\n      endTime: endMoment.valueOf()\n    });\n\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    hash: state.router.location.hash,\n  }\n}\n\nexport default connect(mapStateToProps)(HeaderBar);\n","import React, { Component } from \"react\";\nimport { Table, Icon, Button } from \"antd\";\nimport moment from \"moment\";\nimport \"antd/dist/antd.css\";\nimport \"./style.scss\";\nimport HeaderBar from \"./components/header-bar/index\";\n\nconst { Column } = Table;\n\nconst ICON_BY_PLATFORM = {\n  \"-1\": <span>Unknown</span>,\n  \"0\": (\n    <span>\n      <Icon type=\"android\" /> | <Icon type=\"apple\" />\n    </span>\n  ),\n  \"1\": (\n    <span>\n      <Icon type=\"android\" />\n    </span>\n  ),\n  \"2\": (\n    <span>\n      <Icon type=\"apple\" />\n    </span>\n  )\n};\n\nclass ListPage extends Component {\n  render() {\n    const { filterConditions, tasks, updateFilterConditions, fetchTasks, loading, type } = this.props;\n    return (\n      <div className={\"listpage-container\"}>\n        <HeaderBar\n          filterConditions={filterConditions}\n          updateFilterConditions={updateFilterConditions}\n          fetchTasks={fetchTasks}\n          type={type}\n        />\n        <div className={\"table-container\"}>\n            {\n              (() => {\n                if (type === \"native\") {\n                  return this.renderNativeColumns(tasks, loading);\n                } else if (type === \"web\") {\n                  return this.renderWebColumns(tasks, loading);\n                }\n              })()\n            }\n        </div>\n      </div>\n    );\n  }\n\n  renderNativeColumns = (tasks, loading) => {\n    return (\n      <Table size=\"middle\" dataSource={tasks} loading={loading} pagination={false} scroll={{y: 650}} rowKey=\"taskId\">\n        <Column title=\"任务id\" dataIndex=\"taskId\" key=\"taskId\" width=\"10%\" />\n        <Column title=\"AppId\" dataIndex=\"appId\" key=\"appId\" width=\"10%\"/>\n        <Column title=\"AppVersion\" dataIndex=\"appVersion\" key=\"appVersion\" width=\"10%\"/>\n        <Column title=\"设备标识\" dataIndex=\"deviceId\" key=\"deviceId\" width=\"15%\" />\n        <Column title=\"unionId\" dataIndex=\"unionId\" key=\"unionId\" width=\"15%\" />\n        <Column title=\"设备平台\" dataIndex=\"platform\" key=\"platform\" width=\"10%\" render={this.renderColumnPlatform} />\n        <Column title=\"日志当天时间\" dataIndex=\"logDate\" key=\"logDate\" width=\"10%\" render={this.renderColumnLogDate} />\n        <Column title=\"日志上报时间\" dataIndex=\"addTime\" key=\"addTime\" width=\"10%\" render={this.renderColumnAddTime} />\n        <Column title=\"操作\" dataIndex=\"action\" width=\"10%\" render={this.renderColumnAction} />\n      </Table>\n    );\n  };\n\n  renderWebColumns = (tasks, loading) => {\n    return (\n      <Table size=\"middle\" dataSource={tasks} loading={loading} pagination={false} scroll={{y: 650}} rowKey=\"taskId\">\n        <Column title=\"设备标识\" dataIndex=\"deviceId\" key=\"deviceId\" width=\"30%\" />\n        <Column title=\"日志来源\" dataIndex=\"webSource\" key=\"webSource\" width=\"15%\" render={this.renderColumnWebSource} />\n        <Column title=\"环境信息\" dataIndex=\"environment\" key=\"environment\" width=\"15%\" render={this.renderColumnEnvironment} />\n        <Column title=\"日志当天时间\" dataIndex=\"logDate\" key=\"logDate\" width=\"10%\" render={this.renderColumnLogDate} />\n        <Column title=\"日志上报时间\" dataIndex=\"addTime\" key=\"addTime\" width=\"10%\" render={this.renderColumnAddTime} />\n        <Column title=\"操作\" dataIndex=\"action\" width=\"10%\" render={this.renderColumnAction} />\n      </Table>\n    );\n  };\n\n  renderColumnPlatform = platform => {\n    return ICON_BY_PLATFORM[platform]\n  };\n\n  renderColumnWebSource = webSource => {\n    if (webSource === null) {\n      return <span>-</span>\n    } else {\n      return <span>{webSource}</span>\n    }\n  };\n\n  renderColumnEnvironment = environment => {\n    if (environment === null) {\n      return <span>-</span>\n    } else {\n      return <span>{environment}</span>\n    }\n  };\n\n  renderColumnLogDate = logDate => {\n    return <div>{moment(logDate).format(\"YYYY-MM-DD\")}</div>\n  }\n\n  renderColumnAddTime = addTime => {\n    return <div>{moment(addTime).format(\"YYYY-MM-DD HH:mm:ss.SSS\")}</div>;\n  };\n\n  renderColumnAction = (text, record, index) => {\n    const {type} = this.props;\n    if (type === \"native\") {\n      return <Button onClick={this.toDetail(record.taskId)}>日志详情</Button>;\n    } else {\n      return <Button onClick={this.toDetail(record.tasks)}>日志详情</Button>;\n    }\n  };\n\n  toDetail = tasks => () => {\n    const {detailUrlPrefix} = this.props;\n    this.props.history.push(`${detailUrlPrefix}?tasks=${tasks}`);\n  };\n}\n\nexport default ListPage;\n","import axios from \"axios\";\nimport { message } from 'antd';\n\nconst BASE_URL = process.defineEnv.API_BASE_URL;\nconst API_TIME_OUT = 30000;\nlet pendingRequests = [];\n\n// axios instance\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  timeout: API_TIME_OUT,\n  withCredentials: true\n});\n\n\n// Native Apis\n\nexport function fetchNativeListInitData() {\n  return instance.get(\"/logan/latest.json\");\n}\n\nexport function fetchNativeTaskApi(deviceId, platform, beginTime, endTime) {\n  console.log( { deviceId, platform, beginTime, endTime })\n  return instance.get(\"/logan/task/search.json\", {\n    params: {\n      deviceId,\n      platform,\n      beginTime,\n      endTime\n    }\n  });\n}\n\nexport function fetchNativeTaskInfoByTaskIdApi(taskId) {\n  return instance.get(`/logan/task/${taskId}/info.json`);\n}\n\nexport function fetchNativeLogTypesApi() {\n  return instance.get(\"/logan/meta/logtypes.json\");\n}\n\nexport function fetchNativeTaskBriefsByTaskIdApi(taskId, logTypes, keyword) {\n  return instance.get(`/logan/task/${taskId}/brief.json`, {\n    params: {\n      logTypes,\n      keyword\n    }\n  });\n}\n\nexport function fetchNativeTaskDetailsByDetailIdsApi(detailIds) {\n  return instance.get(\"/logan/task/query/details.json\", {\n    params: {\n      detailIds: detailIds\n    }\n  });\n}\n\nexport function fetchNativeSingleLogDetailByLogIdApi(logId) {\n  return instance.get(`/logan/task/${logId}/detail.json`);\n}\n\nexport function fetchNativeDownloadUrlApi(taskId) {\n  return instance.get(`/logan/task/${taskId}/download.json`);\n}\n\n\n// Web apis\n\n\nexport function fetchWebDownloadUrlApi(tasks) {\n  return instance.get(\"/logan/web/getDownLoadUrl.json\", {\n    params: {\n      tasks: tasks\n    }\n  })\n}\n\nexport function fetchWebListInitData() {\n  return instance.get(\"/logan/web/latest.json\");\n}\n\nexport function fetchWebTaskApi(deviceId, beginTime, endTime) {\n  return instance.get(\"/logan/web/search.json\", {\n    params: {\n      deviceId,\n      beginTime,\n      endTime\n    }\n  })\n}\n\nexport function fetchWebBriefsApi(taskId, logTypes, keyword) {\n  return instance.get(\"/logan/web/detailIndex.json\", {\n    params: {\n      tasks: taskId,\n      logTypes: logTypes,\n      keyword: keyword,\n      beginTime: null,\n      endTime: null\n    }\n  })\n}\n\nexport function fetchWebTaskDetailsByDetailIdsApi(detailIds) {\n  return instance.get(\"/logan/web/details.json\", {\n    params: {\n      detailIds\n    }\n  })\n}\n\nexport function fetchWebTaskInfoByTaskIdApi(taskId) {\n  return instance.get(\"/logan/web/taskDetail.json\", {\n    params: {\n      tasks: taskId\n    }\n  })\n}\n\nexport function fetchWebSingleLogDetailByLogIdApi(detailId) {\n  return instance.get(\"/logan/web/logDetail.json\", {\n    params: {\n      detailId\n    }\n  })\n}\n\n\n// private request configs\n\nconst RemovePendingRequest = (config) => {\n  pendingRequests.forEach((request, idx) => {\n    if (request.id === config.url + '&' + config.method) {\n      request.cancel();\n      pendingRequests.splice(idx, 1);\n    }\n  });\n};\n\nconst AddPendingRequest = (config) => {\n  return new axios.CancelToken(c => {\n    pendingRequests.push({\n      id: config.url + '&' + config.method,\n      cancel: c\n    });\n  });\n};\n\ninstance.interceptors.request.use((config) => {\n  if (config.headers.cancelOthers) {\n    delete config.headers.cancelOthers;\n    RemovePendingRequest(config);\n    config.cancelToken = AddPendingRequest(config);\n  }\n  if (config.headers.removeXRequestedWith) {\n    delete config.headers.removeXRequestedWith;\n    delete config.headers['X-Requested-With'];\n  }\n  return config;\n});\n\nfunction onRequestFulfilled(response) {\n  RemovePendingRequest(response.config);\n  let {code, msg, data} = response.data;\n  if (Number(code) !== 200) {\n    message.warning(`请求出错：${msg}`);\n    return Promise.reject(response.data);\n  }\n  return data;\n}\n\nfunction onRequestRejected(error) {\n  if (!error.request) {\n    return null;\n  }\n  let status = error.response && error.response.status;\n  message.error(`请求出错${status || error.message}`);\n  return Promise.reject(error);\n}\n\ninstance.interceptors.response.use(onRequestFulfilled, onRequestRejected);\n\n\n\n","import {\n  NATIVE_UPDATE_FILTER_CONDITIONS,\n  NATIVE_UPDATE_TASKS,\n  NATIVE_CHANGE_LOADING\n} from \"./reducer\";\nimport {fetchNativeTaskApi, fetchNativeListInitData} from \"../../../common/api\";\n\nexport function fetchInitData() {\n  return (dispatch) => {\n    return fetchNativeListInitData()\n      .then(data => {\n        dispatch({\n          type: NATIVE_UPDATE_TASKS,\n          tasks: data\n        })\n      })\n  }\n}\n\nexport function updateFilterConditions(newFilterConditions) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NATIVE_UPDATE_FILTER_CONDITIONS,\n      filterConditions: newFilterConditions\n    });\n  };\n}\n\nexport function changeLoading(loading) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NATIVE_CHANGE_LOADING,\n      loading: loading\n    });\n  };\n}\n\nexport function fetchTasks({deviceId, platform, beginTime, endTime}) {\n  return (dispatch, getState) => {\n    return fetchNativeTaskApi(deviceId, platform, beginTime, endTime)\n      .then(data => {\n        dispatch({\n          type: NATIVE_UPDATE_TASKS,\n          tasks: data\n        });\n      })\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { every, some } from \"lodash\";\nimport { parse } from \"qs\";\nimport moment from \"moment\";\nimport ListPage from \"../components/list-page/index\";\nimport { updateFilterConditions, fetchTasks, fetchInitData } from \"./redux/action\";\nimport {message} from \"antd\";\n\n\nexport class NativeList extends Component {\n\n  componentDidCatch(error, errorInfo) {\n    message.error(\"页面异常！\");\n    this.props.history.replace(\"/\");\n  }\n\n  componentDidMount() {\n    const { updateFilterConditions, fetchTasks, fetchInitData } = this.props;\n\n    let params = {};\n    if (this.props.location) {\n      params = parse(this.props.location.search, { ignoreQueryPrefix: true });\n    }\n    \n    const { deviceId, platform, beginTime, endTime } = params;\n    \n    if (some([deviceId, beginTime, endTime, platform], item => item === void 0) && !every([deviceId, beginTime, endTime, platform], item => item === void 0)) {\n      message.warn(\"url参数错误！获取默认日志列表\");\n    }\n\n    updateFilterConditions({\n      deviceId: deviceId !== void 0 ? deviceId : \"\",\n      platform: platform !== void 0 ? Number.parseInt(platform) : 0,\n      beginTime: beginTime !== void 0 ? moment(Number.parseInt(beginTime)).valueOf() : moment().startOf(\"day\").subtract(6, 'days').valueOf(),\n      endTime: endTime !== void 0 ? moment(Number.parseInt(endTime)).valueOf() : moment().startOf(\"day\").valueOf()\n    });\n    if (deviceId && beginTime && endTime && platform) {\n      fetchTasks({\n        deviceId,\n        platform,\n        beginTime: moment(Number.parseInt(beginTime)).valueOf(),\n        endTime: moment(Number.parseInt(endTime)).valueOf()\n      });\n    } else {\n      fetchInitData();\n    }\n\n  }  \n\n  render() {\n    return (\n      <ListPage\n        {...this.props}\n        data-test=\"ListPage\"\n        type=\"native\"\n        detailUrlPrefix=\"/native-log-detail\"\n      />\n    )\n  }\n}\n\nexport function mapStateToProps(state) {\n  return {\n    ...state.nativeList\n  };\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    updateFilterConditions: newFilterConditions => dispatch(updateFilterConditions(newFilterConditions)),\n    fetchTasks: (filterConditions) => dispatch(fetchTasks(filterConditions)),\n    fetchInitData: () => dispatch(fetchInitData())\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NativeList);","import {findIndex} from \"lodash\";\n\nimport {NUMBER_OF_LOG_IN_SINGLE_PAGE} from \"../consts/pagination\";\n\nexport function getPageOfLogIdsBySingleLogId(briefs, singleLogId) {\n  const indexOfBrief = findIndex(briefs, item => item.id === singleLogId);\n  const pageSize = NUMBER_OF_LOG_IN_SINGLE_PAGE;\n  const pageNum = Math.ceil(briefs.length / pageSize);\n  const indexOfPage = Math.floor(indexOfBrief / pageSize);\n\n\n  if (pageNum <= 3) {\n    // if the number of pages is less than 3, fetch all\n    return briefs.map(item => item.id);\n  }\n\n  if (indexOfPage === 0) {\n    // if singleLogId is in the first page, fetch the very beginning 3 pages\n    return briefs.slice(0, 3 * pageSize).map(item => item.id)\n  } else if (indexOfPage === pageNum - 1) {\n    // if singleLogId is in the last page, fetch the very last 3 pages\n    return briefs.slice((pageNum - 3) * pageSize, pageNum * pageSize).map(item => item.id)\n  } else {\n    return briefs.slice((indexOfPage - 1) * pageSize, (indexOfPage + 2) * pageSize).map(item => item.id);\n  }\n}","export const NUMBER_OF_LOG_IN_SINGLE_PAGE = 25;","\n\nexport const nativeLogTypeConfigs = [\n  {\n    logType: 1,\n    logTypeName: \"exception catch 日志\",\n    displayColor: \"#32CD32\"\n  },\n  {\n    logType: 2,\n    logTypeName: \"custom 代码日志\",\n    displayColor: \"#2f54eb\"\n  },\n  {\n    logType: 3,\n    logTypeName: \"network日志\",\n    displayColor: \"#5c3317\"\n  },\n  {\n    logType: 84,\n    logTypeName: \"性能日志\",\n    displayColor: \"#5c3317\"\n  }\n];\n\nexport const webLogTypeConfigs = [\n  {\n    logType: 1,\n    logTypeName: \"日志类型1\",\n    displayColor: \"#32CD32\"\n  },\n  {\n    logType: 2,\n    logTypeName: \"日志类型2\",\n    displayColor: \"#2f54eb\"\n  },\n  {\n    logType: 3,\n    logTypeName: \"日志类型3\",\n    displayColor: \"#5c3317\"\n  }\n];\n","import {nativeLogTypeConfigs, webLogTypeConfigs} from \"../consts/logtypes\";\n\nexport const convertBriefsToMinimapBriefs = (briefs, type) => {\n  let ret = [];\n  const LogTypeRules = type === \"native\" ? nativeLogTypeConfigs : webLogTypeConfigs;\n  for (let brief of briefs) {\n    let logType = LogTypeRules.find(rule => rule.logType === brief.logType);\n    if (logType === undefined) {\n      logType = {\n        logType: 0,\n        logTypeName: \"未知日志\",\n        displayColor: \"#000000\"\n      };\n    }\n\n    if (type === \"native\") {\n      ret.push({\n        id: brief.id,\n        time: brief.logTime,\n        logType: {\n          type: logType.logType,\n          logTypeName: logType.logTypeName,\n          displayColor: logType.displayColor\n        }\n      });\n    } else {\n      ret.push({\n        id: brief.detailId,\n        time: brief.logTime,\n        logType: {\n          type: logType.logType,\n          logTypeName: logType.logTypeName,\n          displayColor: logType.displayColor\n        }\n      })\n    }\n\n\n  }\n  return ret;\n};\n\nexport const convertBriefsToLoglistInfiniteScrollBriefs = (briefs, type) => {\n  if (type === \"native\") {\n    return briefs;\n  } else {\n    return briefs.map(item => ({\n      id: item.detailId,\n      logTime: item.logTime,\n      logType: item.logType\n    }))\n  }\n};\n\n","import React, { Component } from \"react\";\nimport { Checkbox, Row, Col, Divider, Button, Input, Radio, Icon, Dropdown } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./style.scss\";\nimport {nativeLogTypeConfigs, webLogTypeConfigs} from \"../../../../../consts/logtypes\";\n\nconst RadioGroup = Radio.Group;\n\n\n\nclass FilterBar extends Component {\n  state = {\n    logTypeDropdownVisible: false,\n    sortedDropdownVisible: false,\n    keywordTemp: \"\"\n  };\n\n  render() {\n    const { filterConditions, logTypesInTask, type, sorted } = this.props;\n    const LOGTYPES_CONFIG = type === \"native\" ? nativeLogTypeConfigs : webLogTypeConfigs;\n    const LogTypeMultiCheck = (\n      <div>\n        <Checkbox.Group\n          onChange={this.handleLogTypesChanged}\n          className=\"log-type-checkbox\"\n          value={\n            filterConditions.logTypes.length === logTypesInTask.length\n              ? [\"all\", ...filterConditions.logTypes]\n              : filterConditions.logTypes\n          }\n          selectable={\"true\"}\n        >\n          <Row>\n            <Col>\n              <Checkbox value=\"all\">全选</Checkbox>\n            </Col>\n          </Row>\n          <Divider style={{ margin: \"8px 0 5px\" }} />\n          {logTypesInTask.map(logType => {\n            const config = LOGTYPES_CONFIG.find(item => item.logType === logType);\n            if (config === undefined) {\n              return (\n                <Row key={logType} className=\"log-type-checkitem\">\n                  <Col>\n                    <Checkbox value={logType}>\n                      <div className=\"check-item-wrapper\">\n                        <span style={{ color: \"#000000\" }}>未知类型</span>\n                      </div>\n                    </Checkbox>\n                  </Col>\n                </Row>\n              );\n            } else {\n              return (\n                <Row key={config.logType} className=\"log-type-checkitem\">\n                  <Col>\n                    <Checkbox value={config.logType}>\n                      <div className=\"check-item-wrapper\">\n                        <span style={{color: config.displayColor}}>{config.logTypeName}</span>\n                      </div>\n                    </Checkbox>\n                  </Col>\n                </Row>\n              );\n            }\n          })}\n        </Checkbox.Group>\n      </div>\n    );\n\n    const sortedMultiCheck = (\n      <RadioGroup className=\"reverse-type\" onChange={this.handleSortedChange} value={sorted}>\n        <Radio value={true} name={\"升序\"} className=\"reverse-type-item\" key={\"true\"}>\n          升序\n          <Icon type=\"arrow-up\" className=\"reverse-arrow\" />\n        </Radio>\n        <Radio value={false} name={\"降序\"} className=\"reverse-type-item\" key={\"false\"}>\n          降序\n          <Icon type=\"arrow-down\" className=\"reverse-arrow\" />\n        </Radio>\n      </RadioGroup>\n    );\n\n    return (\n      <div className=\"filterbar-container\">\n        <Dropdown\n          overlay={LogTypeMultiCheck}\n          trigger={[\"click\"]}\n          visible={this.state.logTypeDropdownVisible}\n          onVisibleChange={flag => {\n            this.setState({ logTypeDropdownVisible: flag });\n          }}\n        >\n          <Button className=\"filter-log-type\">\n            <Icon type=\"check-square\" />\n            日志类型\n          </Button>\n        </Dropdown>\n        <Dropdown\n          overlay={sortedMultiCheck}\n          trigger={[\"click\"]}\n          visible={this.state.sortedDropdownVisible}\n          onVisibleChange={flag => {\n            this.setState({ sortedDropdownVisible: flag });\n          }}\n        >\n          <Button className=\"filter-log-type\">\n            <Icon type=\"check-circle\" />\n            {filterConditions.sorted === false ? \"排序方式：降序\" : \"排序方式：升序\"}\n          </Button>\n        </Dropdown>\n\n        <div className=\"filter-keyword-search-wrapper\">\n          <Input\n            style={{ flex: 1 }}\n            className=\"filter-keyword-search\"\n            placeholder=\"查找日志关键字，回车提交\"\n            prefix={\n              this.state.keywordTemp ? (\n                <Icon\n                  type=\"close-circle-o\"\n                  style={{ color: \"rgba(0,0,0,.25)\", cursor: \"pointer\" }}\n                  onClick={this.handleKeywordClear}\n                />\n              ) : (\n                <span />\n              )\n            }\n            suffix={\n              this.state.keywordTemp ? (\n                <Icon\n                  type=\"search\"\n                  style={{ color: \"rgba(0,0,0,.45)\", cursor: \"pointer\" }}\n                  onClick={this.handleKeywordSearchConfirm}\n                />\n              ) : (\n                <span />\n              )\n            }\n            value={this.state.keywordTemp}\n            onChange={this.handleKeywordTempChange}\n            onPressEnter={this.handleKeywordSearchConfirm}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  handleLogTypesChanged = checkedItems => {\n    const { filterConditions, onFilterConditionChanged, logTypesInTask } = this.props;\n    const previousLogTypes = filterConditions.logTypes;\n    let result = [];\n    if (checkedItems.includes(\"all\")) {\n      // 之前是全选，现在单取消某项\n      if (previousLogTypes.length === logTypesInTask.length) {\n        result = checkedItems.filter(value => {\n          return value !== \"all\"; // checkedItems中要过滤掉'all'这个选项\n        });\n      } else {\n        // 之前不是全选\n        result = logTypesInTask;\n      }\n    } else if (previousLogTypes.length === logTypesInTask.length) {\n      result = [];\n    } else {\n      result = checkedItems;\n    }\n\n    onFilterConditionChanged({\n      ...filterConditions,\n      logTypes: result\n    });\n  };\n\n  handleSortedChange = e => {\n    const { onSortedChanged, rollingListManually } = this.props;\n    this.setState({ sortedDropdownVisible: false });\n    onSortedChanged(e.target.value);\n    rollingListManually(0);\n  };\n\n  handleKeywordClear = () => {\n    const { filterConditions, onFilterConditionChanged } = this.props;\n    onFilterConditionChanged({\n      ...filterConditions,\n      keyword: \"\"\n    });\n    this.setState({\n      keywordTemp: \"\",\n      searchCursor: null\n    });\n  };\n\n  handleKeywordTempChange = e => {\n    this.setState({\n      keywordTemp: e.target.value\n    });\n  };\n\n  handleKeywordSearchConfirm = () => {\n    const { filterConditions, onFilterConditionChanged } = this.props;\n    onFilterConditionChanged({\n      ...filterConditions,\n      keyword: this.state.keywordTemp\n    });\n  };\n}\n\nexport default FilterBar;\n","import React, { Component } from \"react\";\nimport { Card, Button } from \"antd\";\nimport moment from \"moment\";\nimport \"./style.scss\";\nimport {nativeLogTypeConfigs, webLogTypeConfigs} from \"../../../../../consts/logtypes\";\n\nconst titleByKey = {\n  \"id\": \"日志编号\",\n  \"taskId\": \"任务编号\",\n  \"logType\": \"日志类型\",\n  \"logTime\": \"日志记录时间\"\n};\n\nclass LogDetailCard extends Component {\n\n  render() {\n    const { focusLogId, logDetail } = this.props;\n    if (focusLogId === -1) {\n      return null;\n    } else {\n      const { cardTitle, closeButton, metaDatas } = this.conposeSnippetComponents();\n      return (\n        <Card\n            className=\"detail-information-container\"\n            title={cardTitle}\n            extra={closeButton}>\n          <div className=\"metadata\">\n            { metaDatas }\n          </div>\n          {logDetail && <div className=\"log-content\">\n            日志信息:<br />\n            { logDetail[\"content\"] }\n          </div>}\n        </Card>\n      );\n    }\n  }\n\n  handleCloseButtonClicked = () => {\n    this.props.updateFocusLogId(-1);\n  };\n\n  conposeSnippetComponents = () => {\n    const { logDetail, type } = this.props;\n    const logTypesConfig = type === \"native\" ? nativeLogTypeConfigs : webLogTypeConfigs;\n    if (logDetail !== null) {\n      const cardTitle = (\n        <header>\n          <h1>日志条目详情</h1>\n        </header>\n      );\n\n      const closeButton = (\n        <Button icon=\"close\" shape=\"circle\" size=\"small\" onClick={this.handleCloseButtonClicked}/>\n      );\n\n      const metaDatas = Object.keys(logDetail).map(key => {\n        if (!Object.keys(titleByKey).includes(key)) {\n          return null;\n        }\n        let value = \"\";\n        if (key === \"logType\") {\n          const config = logTypesConfig.find(config => config.logType === logDetail[key]);\n          if (config === undefined) {\n            value = \"未知日志\";\n          } else {\n            value = config[\"logTypeName\"];\n          }\n        } else if (key === \"logTime\") {\n          value = moment(logDetail[key]).format('YYYY-MM-DD HH:mm:ss.SSS');\n        } else {\n          value = logDetail[key];\n        }\n        return (\n          <div className=\"metadata-item\" key={titleByKey[key]}>\n            { titleByKey[key] } : { value }\n          </div>\n        )\n      });\n\n      return {\n        cardTitle,\n        closeButton,\n        metaDatas\n      }\n    } else {\n      return {\n        cardTitle: null,\n        closeButton: null,\n        metaDatas: null\n      }\n    }\n\n  };\n}\n\nexport default LogDetailCard;\n","import React, { Component } from \"react\";\nimport { Collapse, Icon } from \"antd\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport \"antd/dist/antd.css\";\nimport \"./style.scss\";\n\nconst { Panel } = Collapse;\n\nclass LogInformation extends Component {\n  render() {\n    const { logInfo, type } = this.props;\n    \n    if (type === \"native\") {\n      const panelHeader = (\n        <span>\n          <span style={{ maxWidth: \"120px\", textOverflow: \"ellipsis\", margin: \"20px 0\"}}>【{ logInfo && logInfo.unionId }】</span>\n          <span>日志基本信息</span>\n        </span>\n      )\n      return (\n        <Collapse bordered={false} accordion className=\"log-report-detail\">\n          <Panel header={panelHeader} key=\"1\">\n            <p>任务ID：{logInfo && logInfo.taskId}</p>\n            <p>AppId: {logInfo && logInfo.appId}</p>\n            <p>AppVersion: {logInfo && logInfo.appVersion}</p>\n            <p>UnionId: {logInfo && logInfo.unionId}</p>\n            <p>设备平台：{logInfo && this.platformNameByPlatformId.get(logInfo.platform)}</p>\n            <p>设备标识：{logInfo && logInfo.deviceId}</p>\n            <p>日志时间：{logInfo && moment(logInfo.logDate).format(\"YYYY-MM-DD\")}</p>\n            <p>\n              上报时间：\n              {logInfo && moment(logInfo.addTime).format(\"YYYY-MM-DD HH:mm:ss.SSS\")}\n            </p>\n            <p>\n              日志大小：\n              {logInfo && numeral(Number.parseInt(logInfo.amount)).format('0.00 b')}\n            </p>\n          </Panel>\n        </Collapse>\n      );\n    } else {\n      const panelHeader = (\n        <span>\n          <span style={{ maxWidth: \"120px\", textOverflow: \"ellipsis\", margin: \"20px 0\"}}>【{ logInfo && logInfo.deviceId }】</span>\n          <span>日志基本信息</span>\n        </span>\n      )\n      return (\n        <Collapse bordered={false} accordion className=\"log-report-detail\">\n          <Panel header={panelHeader} key=\"1\">\n            <p>设备标识：{logInfo && logInfo.deviceId}</p>\n            <p>来源：{logInfo && logInfo.webSource}</p>\n            <p>环境信息：{logInfo && logInfo.environment}</p>\n            <p>日志时间：{moment(logInfo && logInfo.addTime).format(\"YYYY-MM-DD HH:mm:ss\")}</p>\n            <p>日志所属天：{moment(logInfo && logInfo.logDate).format(\"YYYY-MM-DD\")}</p>\n            <p>自定义信息：{logInfo && logInfo.customReportInfo}</p>\n          </Panel>\n        </Collapse>\n      );\n    }\n\n  }\n\n  get platformNameByPlatformId() {\n    const platformNameByPlatformId = new Map();\n    platformNameByPlatformId.set(-1, \"Unknown\");\n    platformNameByPlatformId.set(\n      0,\n      <span>\n        <Icon type=\"apple\" /> | <Icon type=\"android\" />\n      </span>\n    );\n    platformNameByPlatformId.set(\n      1,\n      <span>\n        <Icon type=\"android\" />\n      </span>\n    );\n    platformNameByPlatformId.set(\n      2,\n      <span>\n        <Icon type=\"apple\" />\n      </span>\n    );\n    return platformNameByPlatformId;\n  }\n}\n\nexport default LogInformation;\n","import React, {Component} from \"react\";\nimport {Timeline, Divider, Spin, Icon} from \"antd\";\nimport {isEqual, findIndex} from \"lodash\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport {LOG_MOVE_DISTANCE, LAST_LOAD_MIN_SPAN} from \"./consts\";\nimport {nativeLogTypeConfigs, webLogTypeConfigs} from \"../../../../../consts/logtypes\";\nimport {NUMBER_OF_LOG_IN_SINGLE_PAGE} from \"../../../../../consts/pagination\"\nimport moment from \"moment\";\nimport style from \"./style.module.scss\";\n\nclass LogListInfiniteScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.passiveSupported = false;\n    this.lastUploadTime = Date.now();\n    this.lastDownloadTime = Date.now();\n    this.uploading = false;\n    this.downloading = false;\n    this.state = {\n      mouseUpRolling: false,\n      upHasMore: false,\n      downHasMore: false\n    };\n\n    // test whether the target browser supports passive mode event\n    try {\n      const options = Object.defineProperty({}, \"passive\", {\n        get() {\n          this.passiveSupported = true;\n          return this.passive;\n        }\n      });\n      window.addEventListener(\"test\", null, options);\n    } catch (err) {}\n  }\n\n  componentDidMount() {\n    document.addEventListener(\n      \"mousewheel\",\n      event => {\n        if (event.wheelDelta > 0) {\n          // 滚动向上\n          if (!this.state.mouseUpRolling) {\n            this.setState({mouseUpRolling: true});\n          }\n        } else {\n          // 滚动向下\n          if (this.state.mouseUpRolling) {\n            this.setState({mouseUpRolling: false});\n          }\n        }\n        this.updateHighLightIndex();\n      },\n      this.passiveSupported ? {passive: true} : false\n    );\n    this.updateHighLightIndex();\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return !isEqual(nextProps, this.props) || !isEqual(nextState, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {data, briefs, focusLogId, rollingListManually} = this.props;\n    if (data.length === 0 || briefs.length === 0) {\n      return false;\n    }\n\n    const pageNum = Math.ceil(briefs.length / NUMBER_OF_LOG_IN_SINGLE_PAGE);\n\n    // handle whether the focusLogId change is from close detail card\n    // if it is from detail card, don't scroll\n    if (prevProps.focusLogId !== focusLogId && focusLogId !== -1) {\n      const focusLogIndex = this.calculateIndexOfLogList(focusLogId, data);\n      rollingListManually(focusLogIndex);\n    }\n    this.updateHighLightIndex();\n\n    // set loading options\n    if (prevState.upHasMore === this.state.upHasMore && prevState.downHasMore === this.state.downHasMore) {\n      if (pageNum <= 3) {\n        this.setState({\n          upHasMore: false,\n          downHasMore: false\n        })\n      } else {\n        if (data[data.length - 1].id === briefs[briefs.length - 1].id) {\n          this.setState({\n            downHasMore: false\n          })\n        } else {\n          this.setState({\n            downHasMore: true\n          })\n        }\n        if (data[0].id === briefs[0].id) {\n          this.setState({\n            upHasMore: false\n          })\n        } else {\n          this.setState({\n            upHasMore: true\n          })\n        }\n      }\n    }\n  }\n\n  render() {\n    const {data, focusLogId, type, updateFocusLogId} = this.props;\n    const {upHasMore, downHasMore, mouseUpRolling} = this.state;\n    return (\n      <div className={style[\"inifinite-scroll-container\"]}>\n        <div className={style[\"container-inner\"]} id=\"infinite-container-inner\">\n          {mouseUpRolling && !upHasMore && <Divider className=\"bottom-line\">顶部</Divider>}\n          {upHasMore && (\n            <div className=\"log-uploading-top\">\n              <div className=\"log-uploading-trigger\" onClick={() => {\n                this.loadMore(\"up\");\n              }}>\n                <Icon type=\"caret-up\"/>\n              </div>\n            </div>\n          )}\n\n          <InfiniteScroll\n            initialLoad={false}\n            pageStart={0}\n            loadMore={() => {\n              this.loadMore();\n            }}\n            hasMore={(mouseUpRolling && upHasMore) || (!mouseUpRolling && downHasMore)}\n            useWindow={false}\n            isReverse={mouseUpRolling}\n            threshold={250}\n            className={style[\"scroll-content\"]}\n          >\n            <Timeline style={{marginTop: \"20px\"}}>\n              {data.map((item, index) => (\n                <TimelineItem\n                  item={item}\n                  index={index}\n                  focusLogId={focusLogId}\n                  type={type}\n                  updateFocusLogId={updateFocusLogId}\n                  key={`${item.id}-${index}`}\n                />\n              ))}\n            </Timeline>\n          </InfiniteScroll>\n\n          {this.state.downloading && (\n            <div className=\"demo-loading\">\n              <Spin/>\n            </div>\n          )}\n\n          {!downHasMore && <Divider className=\"bottom-line\">到底了</Divider>}\n        </div>\n      </div>\n    );\n  }\n\n  loadMore = (direction, needFocus) => {\n    const {briefs, data, rollingListManually, fetchTaskDetail} = this.props;\n    const {upHasMore, downHasMore} = this.state;\n\n    // decided direction of loading\n    let isUp;\n    if (direction === \"up\") {\n      isUp = true;\n    } else {\n      isUp = this.state.mouseUpRolling;\n    }\n\n    // decided whether go to the end of current direction\n    if (!((isUp && upHasMore) || ((!isUp) && downHasMore))) {\n      return;\n    }\n\n    // throttle if\n    if (\n      (isUp && Date.now() - this.lastUploadTime > LAST_LOAD_MIN_SPAN && !this.state.uploading) ||\n      (!isUp && Date.now() - this.lastDownloadTime > LAST_LOAD_MIN_SPAN && !this.state.downloading)\n    ) {\n      const pageSize = NUMBER_OF_LOG_IN_SINGLE_PAGE;\n      const startIndex = findIndex(briefs, item => item.id === data[0].id);\n      const endIndex = findIndex(briefs, item => item.id === data[data.length - 1].id);\n      const startPageIndex = Math.floor(startIndex / pageSize);\n      const endPageIndex = Math.floor((endIndex + 1) / pageSize);\n\n\n      if (isUp) {\n        this.setState({uploading: true});\n        this.lastUploadTime = Date.now();\n        const detailIds = briefs.slice((startPageIndex - 1) * pageSize, startPageIndex * pageSize).map(item => item.id);\n        fetchTaskDetail(detailIds, \"up\")\n          .then(() => {\n            const highlightPairs = this.getHeadAndBottomLogIdInView(data, briefs);\n            const index = data.findIndex(item => {\n              return item.id === highlightPairs.startLogId;\n            });\n            rollingListManually(index);\n            this.setState({uploading: false});\n          })\n      } else {\n        this.setState({downloading: true});\n        this.lastDownloadTime = Date.now();\n        const highlightPairs = this.getHeadAndBottomLogIdInView(data, briefs);\n        const detailIds = briefs.slice(endPageIndex * pageSize, (endPageIndex + 1) * pageSize).map(item => item.id);\n        fetchTaskDetail(detailIds, \"down\")\n          .then(() => {\n            const index = data.findIndex(item => {\n              return item.id === highlightPairs.startLogId;\n            });\n            rollingListManually(index);\n            this.setState({downloading: false});\n          })\n\n      }\n    }\n  };\n\n\n\n  // 在视窗中日志有变时触发\n  updateHighLightIndex = () => {\n    const {data, briefs, updateHighLightIndex} = this.props;\n    let logHeadAndBottomInView = this.getLogHeadAndBottomInView(data, briefs);\n    updateHighLightIndex(logHeadAndBottomInView.startLogIndex, logHeadAndBottomInView.endLogIndex);\n  };\n\n  // 获取视窗中的头尾日志id\n  getLogHeadAndBottomInView = (logList, logIndexList) => {\n    let scrollTopOfLogList = document.querySelector(\"#infinite-container-inner\").scrollTop;\n    let heightOfView = document.querySelector(\"#infinite-container-inner\").clientHeight;\n\n    let numberOfLogBeforeHead = Math.max(Math.round(scrollTopOfLogList / LOG_MOVE_DISTANCE), 0);\n    let numberOfLogInView = Math.round(heightOfView / LOG_MOVE_DISTANCE);\n\n    if (logList.length > 0 && logIndexList.length > 0) {\n      let logHead = logList[Math.min(numberOfLogBeforeHead, logList.length - 1)].id;\n      let logBottom = logList[Math.min(numberOfLogBeforeHead + numberOfLogInView, logList.length - 1)].id;\n\n      return {\n        startLogIndex: logIndexList.findIndex(logIndexItem => {\n          return logIndexItem.id === logHead;\n        }),\n        endLogIndex: logIndexList.findIndex(logIndexItem => {\n          return logIndexItem.id === logBottom;\n        })\n      };\n    } else {\n      return {\n        startLogIndex: -1,\n        endLogIndex: -1\n      };\n    }\n  };\n\n  getHeadAndBottomLogIdInView = (logList, logIndexList) => {\n    let scrollTopOfLogList = document.querySelector(\"#infinite-container-inner\").scrollTop;\n    let heightOfView = document.querySelector(\"#infinite-container-inner\").clientHeight;\n\n    let numberOfLogBeforeHead = Math.max(parseInt(scrollTopOfLogList / LOG_MOVE_DISTANCE), 0);\n    let numberOfLogInView = parseInt(heightOfView / LOG_MOVE_DISTANCE);\n\n    if (logList.length > 0 && logIndexList.length > 0) {\n      let logHead = logList[Math.min(numberOfLogBeforeHead, logList.length - 1)].id;\n      let logBottom = logList[Math.min(numberOfLogBeforeHead + numberOfLogInView, logList.length - 1)].id;\n\n      return {\n        startLogId: logHead,\n        endLogId: logBottom\n      };\n    } else {\n      return {\n        startLogId: -1,\n        endLogId: -1\n      };\n    }\n  };\n\n  calculateIndexOfLogList = (logId, details) => {\n    return details.findIndex(item => item.id === logId);\n  }\n}\n\nexport default LogListInfiniteScroll;\n\n/// 以下全为辅助组件\nfunction TimelineItem({item, index, focusLogId, type, updateFocusLogId}) {\n  const LogTypes = type === \"native\" ? nativeLogTypeConfigs : webLogTypeConfigs;\n  let logType = LogTypes.find(type => type.logType === item.logType);\n  if (logType === undefined) {\n    logType = {\n      logType: 0,\n      logTypeName: \"未知日志\",\n      displayColor: \"#000000\"\n    };\n  }\n  return (\n    <Timeline.Item\n      className={style[\"timeline-item\"]}\n      id={\"log-item-row-\" + index}\n      color={logType.displayColor}\n      key={\"log-item-row-\" + item.id}\n      onClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        updateFocusLogId(item.id);\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: item.id === focusLogId ? \"#e6f7ff\" : \"transparent\"\n        }}\n      >\n        <div className={style[\"log-time-title\"]}>\n          <div className={style[\"log-time-title-left\"]}>\n            <div className={style[\"log-type\"]} style={{color: logType.displayColor}}>\n              {logType.logTypeName}:\n            </div>\n            <div className={style[\"log-time\"]}>{moment(item.logTime).format(\"HH:mm:ss.SSS\")}</div>\n          </div>\n          <div className={style[\"log-time-title-right\"]}>\n            <div className={style[\"log-id\"]}>日志ID：{item.id}</div>\n          </div>\n        </div>\n        <div className={style[\"log-content\"]}>\n          <div className={style[\"log-abbr\"]}>{item.simpleContent || item.content}</div>\n        </div>\n      </div>\n    </Timeline.Item>\n  );\n\n}\n","export const LOG_MOVE_DISTANCE = 56;\nexport const LAST_LOAD_MIN_SPAN = 1500;\n","import React, { Component, Fragment } from \"react\";\nimport { isEqual } from \"lodash\";\nimport Konva from \"konva\";\nimport moment from \"moment\";\n\nclass TimeMiniMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.$container = null;\n\n    this.stage = null;\n    this.timeline = null;\n    this.hoverMark = null;\n    this.locator = null;\n\n    this.timelineMarginTop = 0;\n    this.timelineMarginBottom = 0;\n    this.timelineHeight = 0;\n    this.timelineWidth = 0;\n    this.timelineLeftOffset = 0;\n\n    this.state = {\n      showToolTip: false,\n      toolTipX: 0,\n      toolTipY: 0,\n      hoveredLog: null\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div id=\"timeline-container\" style={{ width: \"50px\", height: \"100%\", display: \"flex\" }}></div>\n        <LogTooltip\n          hoveredLog={this.state.hoveredLog}\n          showing={this.state.showToolTip}\n          x={this.state.toolTipX}\n          y={this.state.toolTipY}\n        />\n      </Fragment>\n    );\n  }\n\n  componentDidMount() {\n    this._initComponents();\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    const {data, startIndex, endIndex} = this.props;\n    return (!isEqual(nextProps.data, data)) || (startIndex !== nextProps.startIndex) || (endIndex !== nextProps.endIndex) || (!isEqual(nextState, this.state));\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {data, startIndex, endIndex} = this.props;\n    if ((this.$container.clientHeight !== this.stage.getHeight()) ||\n        (!isEqual(prevProps.data, data)) ||\n        (startIndex !== prevProps.startIndex) ||\n        (endIndex !== prevProps.endIndex)) {\n      this._initComponents();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.removeEventListener(\"click\", this.onClick);\n  }\n\n  onMouseMove = event => {\n    const { data } = this.props;\n\n    if (this._isInTimeline(event.offsetX, event.offsetY)) {\n      const logIndex = this._calculateLogIndexFromCoordinate(event.offsetX, event.offsetY - this.timelineMarginTop);\n\n      if (logIndex !== null && event.target.localName === \"canvas\") {\n        this.setState({\n          showToolTip: true,\n          toolTipX: this.$container.clientWidth + this.$container.offsetLeft,\n          toolTipY: event.clientY,\n          hoveredLog: data[logIndex]\n        });\n      }\n      this.hoverMark.y(event.offsetY);\n      if (!this.hoverMark.isVisible()) {\n        this.hoverMark.show();\n      }\n    } else {\n      this.setState({\n        showToolTip: false\n      });\n      if (this.hoverMark.isVisible()) {\n        this.hoverMark.hide();\n      }\n    }\n    if (event.target.localName === \"canvas\") {\n      this.stage.draw();\n    }\n  };\n\n  onClick = event => {\n    if (this._isInTimeline(event.offsetX, event.offsetY) && event.target.localName === \"canvas\") {\n      const { updateFocusLogId } = this.props;\n      if (this.state.hoveredLog !== null) {\n        updateFocusLogId(this.state.hoveredLog.id);\n      }\n    }\n  };\n\n  _prepareContainer = () => {\n    this.$container = document.querySelector(\"#timeline-container\");\n    this.clientHeight = this.$container.clientHeight;\n    this.clientWidth = this.$container.clientWidth;\n  };\n\n  _prepareHoverMark = () => {\n    this.hoverMark = new Konva.Line({\n      points: [4, 0, this.timelineLeftOffset + this.timelineWidth + 4, 0],\n      stroke: \"#8c8c8c\",\n      strokeWidth: 2\n    });\n    this.timeline.add(this.hoverMark);\n    this.hoverMark.hide();\n  };\n\n  _prepareLocator = () => {\n    const { startIndex, endIndex } = this.props;\n    if (startIndex >= 0 && endIndex >= 0) {\n      const [startX, startY] = this._calculateCoordinateFromLogIndex(startIndex);\n      const [endX, endY] = this._calculateCoordinateFromLogIndex(endIndex);  // eslint-disable-line\n      this.locator = new Konva.Rect({\n        x: startX,\n        y: startY,\n        width: this.timelineWidth,\n        height: endY - startY,\n        stroke: \"#000000\",\n        strokeWidth: 3,\n        opacity: 0.5,\n        fill: \"#8c8c8c\"\n      });\n      this.timeline.add(this.locator);\n    }\n  };\n\n  _initComponents = () => {\n    const { timelineMarginTop, timelineMarginBottom, timelineWidth, timelineLeftOffset, data } = this.props;\n\n\n    if (this.$container === null) {\n      this._prepareContainer();\n    }\n    this.stage = new Konva.Stage({\n      container: \"#timeline-container\",\n      width: this.$container.offsetWidth,\n      height: this.$container.offsetHeight\n    });\n    this.timeline = new Konva.Layer({\n      clearBeforeDraw: true\n    });\n    this.stage.add(this.timeline);\n\n\n    this.timelineMarginTop = timelineMarginTop;\n    this.timelineMarginBottom = timelineMarginBottom;\n    this.timelineWidth = timelineWidth;\n    this.timelineLeftOffset = timelineLeftOffset;\n    this.timelineHeight = this.timeline.getHeight() - this.timelineMarginTop - this.timelineMarginBottom;\n\n\n    this._renderOutline();\n\n    if (data && data.length > 0) {\n      this._renderBeginEndTimeStamp();\n      this._renderLogLines();\n    }\n    this._prepareHoverMark();\n    this._prepareLocator();\n    this._initMouseEvent();\n    this.stage.draw();\n  };\n\n  _renderOutline = () => {\n\n    const timelineLeftBorder = new Konva.Line({\n      // [x1, y1, x2, y2]\n      points: [\n        this.timelineLeftOffset,\n        this.timelineMarginTop,\n        this.timelineLeftOffset,\n        this.timelineMarginTop + this.timelineHeight\n      ],\n      stroke: \"grey\",\n      strokeWidth: 1\n    });\n    const timelineRightBorder = timelineLeftBorder.clone().move({ x: this.timelineWidth, y: 0 });\n    this.timeline.add(timelineLeftBorder);\n    this.timeline.add(timelineRightBorder);\n  };\n\n  _renderBeginEndTimeStamp = () => {\n    const { data } = this.props;\n\n    const startTime = new Konva.Text({\n      fontFamily: \"serif\",\n      fontSize: 11,\n      text: moment(data[0].time).format(\"HH:mm:ss\"),\n      x: 5,\n      y: 5\n    });\n    const endTime = new Konva.Text({\n      fontFamily: \"serif\",\n      fontSize: 11,\n      text: moment(data[data.length - 1].time).format(\"HH:mm:ss\"),\n      x: 5,\n      y: 5 + this.timelineMarginTop + this.timelineHeight\n    });\n\n    this.timeline.add(startTime);\n    this.timeline.add(endTime);\n  };\n\n  _renderLogLines = () => {\n    const { data } = this.props;\n    const lineCanvasHeightSpan = this.timelineHeight / (data.length - 1);\n    for (let i = 0; i < data.length; i++) {\n      const logLine = new Konva.Line({\n        points: [\n          this.timelineLeftOffset,\n          lineCanvasHeightSpan * i + this.timelineMarginTop,\n          this.timelineLeftOffset + this.timelineWidth,\n          lineCanvasHeightSpan * i + this.timelineMarginTop\n        ],\n        strokeWidth: 1,\n        stroke: data[i].logType.displayColor\n      });\n      this.timeline.add(logLine);\n    }\n  };\n\n  _initMouseEvent = () => {\n    document.addEventListener(\"mousemove\", this.onMouseMove);\n    document.addEventListener(\"click\", this.onClick);\n  };\n\n  _isInTimeline = (x, y) => {\n    const isHorizontalInner = x > this.timelineLeftOffset && x < this.timelineLeftOffset + this.timelineWidth;\n    const isVerticalInner = y > this.timelineMarginTop && y < this.timelineMarginTop + this.timelineHeight;\n    return isHorizontalInner && isVerticalInner;\n  };\n\n\n  _calculateLogIndexFromCoordinate = (x, y) => {\n    const { data } = this.props;\n    const MOUSE_TOLERENCE = 1; // 上下像素容错范围\n    const lineCssHeightSpan = this.timelineHeight / (data.length - 1);\n    const outOfLineRange = y % lineCssHeightSpan; // 鼠标hover处距离某条line多少高度\n    if (outOfLineRange < MOUSE_TOLERENCE) {\n      return parseInt(y / lineCssHeightSpan);\n    } else if (outOfLineRange > lineCssHeightSpan - MOUSE_TOLERENCE) {\n      return parseInt(y / lineCssHeightSpan) + 1;\n    } else {\n      return null;\n    }\n  };\n\n  _calculateCoordinateFromLogIndex = index => {\n    const { data } = this.props;\n    const lineCssHeightSpan = this.timelineHeight / (data.length - 1);\n    return [this.timelineLeftOffset, lineCssHeightSpan * index + this.timelineMarginTop];\n  };\n}\n\nclass LogTooltip extends React.Component {\n  render() {\n    const { hoveredLog, showing, x, y } = this.props;\n    if (!hoveredLog || !showing) {\n      return <div style={{ visible: false }}></div>;\n    }\n    const containerStyle = {\n      position: \"absolute\",\n      left: x,\n      top: y,\n      border: \"1px solid #8c8c8c\",\n      backgroundColor: \"white\",\n      borderRadius: \"5px\",\n      padding: \"0px 10px\",\n      lineHeight: \"25px\",\n      zIndex: \"999\"\n    };\n    return (\n      <div style={containerStyle}>\n        日志ID: {hoveredLog.id}\n        <br />\n        时间: {moment(hoveredLog.time).format(\"HH:mm:ss.SSS\")}\n        <br />\n        日志类型:\n        <span style={{ color: hoveredLog.logType.displayColor }}>{hoveredLog.logType.logTypeName}</span>\n      </div>\n    );\n  }\n}\n\nexport default TimeMiniMap;\n","import React, { Component } from \"react\";\nimport {Button} from \"antd\";\nimport {parse} from \"qs\";\nimport {isEmpty, isNil} from \"lodash\";\nimport FilterBar from \"./components/filter-bar/index\";\nimport LogDetailCard from \"./components/log-detail-card/index\";\nimport LogInformation from \"./components/log-information/index\";\nimport LogListInfiniteScroll from \"./components/loglist-infinite-scroll/index\";\nimport TimeMiniMap from \"./components/time-minimap/index\";\nimport {convertBriefsToMinimapBriefs, convertBriefsToLoglistInfiniteScrollBriefs} from \"../../../common/adapter\"\nimport {NUMBER_OF_LOG_IN_SINGLE_PAGE} from \"../../../consts/pagination\"\nimport \"./style.scss\";\nimport {LOG_MOVE_DISTANCE} from \"./components/loglist-infinite-scroll/consts\";\nimport {fetchNativeDownloadUrlApi, fetchWebDownloadUrlApi} from \"../../../common/api\";\n\n\n\nclass LogDetailPage extends Component {\n\n  render() {\n    const {\n      briefs,\n      taskDetails,\n      highlightStartIndex,\n      highlightEndIndex,\n      logInfo,\n      logTypesInTask,\n      filterConditions,\n      focusLogId,\n      logDetail,\n      updateFilterConditions,\n      updateFocusLogId,\n      updateHighLightIndex,\n      updateSorted,\n      fetchTaskDetail,\n      type,\n      sorted\n    } = this.props;\n\n    const { upHasMore, downHasMore } = this._calculateUpHasMoreAndDownHasMore({briefs: briefs, startLogIndex: highlightStartIndex});\n\n    return (\n      <div className=\"logdetail-container\">\n        <div className=\"header\">\n          <Button icon=\"left\" onClick={this.handleBackToListButtonClicked}>返回列表</Button>\n          <LogInformation logInfo={logInfo} type={type}/>\n          <Button icon=\"download\" onClick={this.handleLogDownloadButtonClicked}>日志文件下载</Button>\n        </div>\n        <div className=\"content\">\n          <FilterBar\n            type={type}\n            filterConditions={filterConditions}\n            logTypesInTask={logTypesInTask}\n            onFilterConditionChanged={updateFilterConditions}\n            rollingListManually={this.rollingListManually}\n            onSortedChanged={updateSorted}\n            sorted={sorted}\n          />\n          <div className=\"detail-container\">\n            {(briefs && convertBriefsToMinimapBriefs(briefs, type).length > 50) &&\n              <TimeMiniMap\n                type={type}\n                timelineMarginTop={20}\n                timelineMarginBottom={20}\n                timelineWidth={30}\n                timelineLeftOffset={8}\n                data={convertBriefsToMinimapBriefs(briefs, type)}\n                startIndex={highlightStartIndex}\n                endIndex={highlightEndIndex}\n                updateFocusLogId={updateFocusLogId}\n                updateHighLightIndex={updateHighLightIndex}\n              />\n            }\n            <LogListInfiniteScroll\n              type={type}\n              briefs={convertBriefsToLoglistInfiniteScrollBriefs(briefs, type)}\n              upHasMore={upHasMore}\n              downHasMore={downHasMore}\n              data={taskDetails}\n              focusLogId={focusLogId}\n              updateHighLightIndex={updateHighLightIndex}\n              updateFocusLogId={updateFocusLogId}\n              fetchTaskDetail={fetchTaskDetail}\n              rollingListManually={this.rollingListManually}\n            />\n            <LogDetailCard\n              type={type}\n              focusLogId={focusLogId}\n              logDetail={logDetail}\n              updateFocusLogId={updateFocusLogId}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  rollingListManually = (logIndex) => {\n    const $listScroll = document.querySelector(\"#infinite-container-inner\");\n    if ($listScroll) {\n      let nextScrollTop = logIndex * LOG_MOVE_DISTANCE - LOG_MOVE_DISTANCE;\n      $listScroll.scrollTo(0, nextScrollTop);\n    }\n  };\n\n  handleBackToListButtonClicked = () => {\n    const { type, history, nativeListFilterConditions, webListFilterConditions } = this.props;\n    if (type === \"native\") {\n      const { deviceId, platform, beginTime, endTime } = nativeListFilterConditions;\n      if (((!isEmpty(deviceId) && !isNil(deviceId)) && !isNil(platform) && !isNil(beginTime) && !isNil(endTime))) {\n        history.push(`/native-list?deviceId=${deviceId}&beginTime=${beginTime}&endTime=${endTime}&platform=${platform}`)\n      } else {\n        history.push(\"/native-list\")\n      }\n    } else {      \n      const { deviceId, beginTime, endTime } = webListFilterConditions;\n      if (((!isEmpty(deviceId) && !isNil(deviceId)) && !isNil(beginTime) && !isNil(endTime))) {\n        history.push(`/web-list?deviceId=${deviceId}&beginTime=${beginTime}&endTime=${endTime}`)\n      } else {\n        history.push(\"/web-list\")\n      }\n    }\n  }\n\n  handleLogDownloadButtonClicked = () => {\n    if (this.props.location) {\n      const {type} = this.props;\n      const {tasks} = parse(this.props.location.search, { ignoreQueryPrefix: true });\n      let downloadUrlPromise = null;\n      if (type === \"native\") {\n        downloadUrlPromise = fetchNativeDownloadUrlApi(tasks)\n      } else {\n        downloadUrlPromise = fetchWebDownloadUrlApi(tasks)\n      }\n      downloadUrlPromise.then(data => {\n        // replace your own download logic here!\n        window.open(`${window.location.origin}${data}`);\n      })\n    }\n    \n  };\n\n  _calculateUpHasMoreAndDownHasMore = ({ briefs, startLogIndex }) => {\n    let upHasMore = false;\n    let downHasMore = false;\n    const pageSize = NUMBER_OF_LOG_IN_SINGLE_PAGE;\n    const pageNum = Math.ceil(briefs.length / pageSize);\n    if (briefs.length > 0) {\n      const pageIndex = Math.floor(startLogIndex / pageSize);\n      if (pageIndex === 0) {\n        upHasMore = false;\n        downHasMore = true;\n      } else if (pageIndex > 0 && pageIndex < pageNum) {\n        upHasMore = true;\n        downHasMore = true;\n      } else {\n        upHasMore = true;\n        downHasMore = false;\n      }\n    }\n\n    return { upHasMore, downHasMore };\n  };\n\n}\n\nexport default LogDetailPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { parse } from \"qs\";\n\nimport {\n  fetchPageInitData,\n  fetchTaskDetail,\n  updateFilterConditions,\n  updateFocusLogId,\n  updateHighLightIndex,\n  initState,\n  updateSorted\n} from \"./redux/action\";\n\nimport LogDetailPage from \"../components/log-detail-page/index\";\nimport {message} from \"antd\";\n\nexport function mapStateToProps(state) {\n  return {\n    ...state.nativeLogDetail,\n    nativeListFilterConditions: state.nativeList.filterConditions\n  };\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    fetchPageInitData: (taskId, focusLogId) => dispatch(fetchPageInitData(taskId, focusLogId)),\n    updateFocusLogId: topLogId => dispatch(updateFocusLogId(topLogId)),\n    updateFilterConditions: filterConditions => dispatch(updateFilterConditions(filterConditions)),\n    updateHighLightIndex: (start, end) => dispatch(updateHighLightIndex(start, end)),\n    fetchTaskDetail: (detailIds, direction) => dispatch(fetchTaskDetail(detailIds, direction)),\n    initState: () => dispatch(initState()),\n    updateSorted: (sorted) => dispatch(updateSorted(sorted))\n  };\n}\n\n\nexport class NativeLogDetail extends Component{\n\n  componentDidCatch(error, errorInfo) {\n    message.error(\"页面异常！\");\n    this.props.history.replace(\"/\");\n  }\n\n  componentDidMount() {\n    const { initState } = this.props;\n    initState();\n    let params = {};\n    if (this.props.location) {\n      params = parse(this.props.location.search, { ignoreQueryPrefix: true });\n    }\n    const { tasks, focusLogId } = params;\n    this.props.fetchPageInitData(tasks, focusLogId);\n  }\n\n  render() {\n    return (\n      <LogDetailPage\n        data-test=\"NativeLogDetailPage\"\n        {...this.props}\n        type=\"native\"\n      />\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NativeLogDetail);","import {flattenDeep, sortBy, reverse} from \"lodash\";\nimport {\n  fetchNativeTaskInfoByTaskIdApi,\n  fetchNativeTaskBriefsByTaskIdApi,\n  fetchNativeLogTypesApi,\n  fetchNativeTaskDetailsByDetailIdsApi,\n  fetchNativeSingleLogDetailByLogIdApi,\n  fetchNativeDownloadUrlApi\n} from \"../../../common/api\";\nimport {\n  NATIVE_UPDATE_LOG_INFO,\n  NATIVE_UPDATE_LOG_DOWNLOAD_URL,\n  NATIVE_UPDATE_LOG_TYPES,\n  NATIVE_UPDATE_BRIEFS,\n  NATIVE_UPDATE_TASK_DETAIL,\n  NATIVE_UPDATE_LOG_DETAIL,\n  NATIVE_UPDATE_HIGH_LIGHT_INDEX,\n  NATIVE_UPDATE_FOCUS_LOG_ID,\n  NATIVE_UPDATE_LOGDETAIL_FILTER_CONDITIONS,\n  NATIVE_UPDATE_LOG_TYPES_IN_TASK,\n  NATIVE_UPDATE_SORTED,\n  NATIVE_INITIAL_STATE\n} from \"./reducer\";\n\nimport {getPageOfLogIdsBySingleLogId} from \"../../../common/util\";\nimport {convertBriefsToLoglistInfiniteScrollBriefs} from \"../../../common/adapter\";\n\n\n\nexport function fetchPageInitData(taskId, focusLogId) {\n  return (dispatch, getState) => {\n    return Promise.all([\n      fetchNativeTaskInfoByTaskIdApi(taskId),\n      fetchNativeLogTypesApi(),\n      fetchNativeTaskBriefsByTaskIdApi(taskId)\n    ])\n      .then(([infoData, logTypeData, briefData]) => {\n        // flatten the briefData\n        briefData = flattenDeep(briefData);\n        let detailIds = [];\n        if (briefData.length > 0) {\n          if (focusLogId) {\n            detailIds = getPageOfLogIdsBySingleLogId(briefData, focusLogId);\n          } else {\n            detailIds = getPageOfLogIdsBySingleLogId(briefData, briefData[0].id);\n          }\n        }\n        return Promise.all([infoData, logTypeData, briefData, detailIds])\n      })\n      .then(([infoData, logTypeData, briefData,detailIds]) => {\n        return Promise.all([infoData, logTypeData, briefData, fetchNativeTaskDetailsByDetailIdsApi(detailIds.join(','))])\n      })\n      .then(([infoData, logTypeData, briefData, detailData]) => {\n        const logTypeInTask = [...new Set(briefData.map(brief => brief.logType))];\n        dispatch({\n          type: NATIVE_UPDATE_LOG_INFO,\n          logInfo: infoData\n        });\n        dispatch({\n          type: NATIVE_UPDATE_LOG_TYPES,\n          logTypes: logTypeData\n        });\n        dispatch({\n          type: NATIVE_UPDATE_BRIEFS,\n          briefs: briefData\n        });\n        // initialized filterConditions to make sure the logTypes all selected\n        dispatch({\n          type: NATIVE_UPDATE_LOGDETAIL_FILTER_CONDITIONS,\n          filterConditions: {\n            ...getState().nativeLogDetail.filterConditions,\n            logTypes: logTypeInTask\n          }\n        });\n        dispatch({\n          type: NATIVE_UPDATE_LOG_TYPES_IN_TASK,\n          logTypesInTask: logTypeInTask\n        });\n        dispatch({\n          type: NATIVE_UPDATE_TASK_DETAIL,\n          taskDetails: detailData\n        });\n      })\n  };\n}\n\nexport function updateFocusLogId(focusLogId) {\n  return (dispatch, getState) => {\n\n\n    if (focusLogId === -1) {\n      dispatch({\n        type: NATIVE_UPDATE_LOG_DETAIL,\n        logDetail: null\n      });\n      dispatch({\n        type: NATIVE_UPDATE_FOCUS_LOG_ID,\n        focusLogId: focusLogId\n      });\n    } else {\n      const state = getState();\n      const { briefs, taskDetails } = state.nativeLogDetail;\n      const detailIds = getPageOfLogIdsBySingleLogId(briefs, focusLogId);\n\n      // 查找新的focusLogId是否已经从服务器加载，如果已加载，则忽略，如果未加载，则加载。\n      if (taskDetails.find(item => item.id === focusLogId) === undefined) {\n        return fetchNativeTaskDetailsByDetailIdsApi(detailIds.join(\",\"))\n          .then(data => {\n            dispatch({\n              type: NATIVE_UPDATE_TASK_DETAIL,\n              taskDetails: data\n            });\n          })\n          .then(() => {\n            return fetchNativeSingleLogDetailByLogIdApi(focusLogId);\n          })\n          .then(data => {\n            dispatch({\n              type: NATIVE_UPDATE_LOG_DETAIL,\n              logDetail: data\n            });\n          }).then(() => {\n            dispatch({\n              type: NATIVE_UPDATE_FOCUS_LOG_ID,\n              focusLogId: focusLogId\n            });\n          })\n      } else {\n        return fetchNativeSingleLogDetailByLogIdApi(focusLogId)\n          .then(data => {\n            dispatch({\n              type: NATIVE_UPDATE_LOG_DETAIL,\n              logDetail: data\n            });\n          })\n          .then(() => {\n            dispatch({\n              type: NATIVE_UPDATE_FOCUS_LOG_ID,\n              focusLogId: focusLogId\n            });\n          })\n      }\n    }\n  };\n}\n\nexport function updateFilterConditions(filterConditions) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NATIVE_UPDATE_LOGDETAIL_FILTER_CONDITIONS,\n      filterConditions: filterConditions\n    });\n    const { logInfo } = getState().nativeLogDetail;\n    if (logInfo) {\n      return fetchNativeTaskBriefsByTaskIdApi(logInfo.taskId, filterConditions.logTypes.join(\",\"), filterConditions.keyword)\n        .then(data => {\n          const newBriefs  = flattenDeep(data);\n          dispatch({\n            type: NATIVE_UPDATE_BRIEFS,\n            briefs: newBriefs\n          });\n          return newBriefs;\n        })\n        .then(newBriefs => {\n          return fetchNativeTaskDetailsByDetailIdsApi(newBriefs.map(item => item.id).join(\",\"));\n        })\n        .then(data => {\n          dispatch({\n            type: NATIVE_UPDATE_TASK_DETAIL,\n            taskDetails: data\n          });\n        });\n    }\n  };\n}\n\nexport function updateHighLightIndex(start, end) {\n  return (dispatch) => {\n    dispatch({\n      type: NATIVE_UPDATE_HIGH_LIGHT_INDEX,\n      highlightStartIndex: start,\n      highlightEndIndex: end\n    });\n  };\n}\n\nexport function fetchDownloadUrl(taskId) {\n  return (dispatch) => {\n    return fetchNativeDownloadUrlApi(taskId)\n      .then(data => {\n        dispatch({\n          type: NATIVE_UPDATE_LOG_DOWNLOAD_URL,\n          logDownloadUrl: data\n        });\n      });\n  };\n}\n\nexport function fetchTaskDetail(detailIds, direction) {\n  return (dispatch) => {\n    return fetchNativeTaskDetailsByDetailIdsApi(detailIds.join(\",\"))\n      .then(data => {\n        dispatch({\n          type: NATIVE_UPDATE_TASK_DETAIL,\n          taskDetails: data,\n          direction: direction\n        });\n      });\n  };\n}\n\nexport function initState() {\n  return (dispatch) => {\n    dispatch({\n      type: NATIVE_INITIAL_STATE\n    })\n  }\n}\n\nexport function updateSorted(sorted) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NATIVE_UPDATE_SORTED,\n      sorted: sorted\n    });\n\n    const { logInfo, filterConditions } = getState().nativeLogDetail;\n    if (logInfo) {\n      return fetchNativeTaskBriefsByTaskIdApi(logInfo.taskId, filterConditions.logTypes.join(\",\"), filterConditions.keyword)\n        .then(briefs => {\n          const newBriefs = flattenDeep(briefs);\n          let sortedBriefs = [];\n          if (sorted) {\n            sortedBriefs = sortBy(newBriefs, item => item.id);\n          } else {\n            sortedBriefs = sortBy(newBriefs, item => item.id);\n            sortedBriefs = reverse(sortedBriefs);\n          }\n          const detailIds = getPageOfLogIdsBySingleLogId(convertBriefsToLoglistInfiniteScrollBriefs(sortedBriefs, \"native\"), sortedBriefs[0].id);\n          return Promise.all([detailIds, sortedBriefs]);\n        }).then(([detailIds, sortedBriefs]) => {\n          return Promise.all([sortedBriefs, fetchNativeTaskDetailsByDetailIdsApi(detailIds.join(\",\"))])\n        }).then(([sortedBriefs, data]) => {\n          dispatch({\n            type: NATIVE_UPDATE_BRIEFS,\n            briefs: sortedBriefs\n          });\n          dispatch({\n            type: NATIVE_UPDATE_HIGH_LIGHT_INDEX,\n            highlightStartIndex: -1,\n            highlightEndIndex: -1\n          });\n          dispatch({\n            type: NATIVE_UPDATE_FOCUS_LOG_ID,\n            focusLogId: -1\n          });\n          dispatch({\n            type: NATIVE_UPDATE_TASK_DETAIL,\n            taskDetails: data\n          });\n        });\n    }\n  };\n}\n\n\n\n\n\n","import {\n  WEB_UPDATE_FILTER_CONDITIONS,\n  WEB_UPDATE_TASKS,\n  WEB_CHANGE_LOADING\n} from \"./reducer\";\nimport {fetchWebTaskApi, fetchWebListInitData} from \"../../../common/api\";\n\n\nexport function fetchInitData() {\n  return (dispatch) => {\n    return fetchWebListInitData()\n      .then(data => {\n        dispatch({\n          type: WEB_UPDATE_TASKS,\n          tasks: data\n        })\n      })\n  }\n}\n\nexport function updateFilterConditions(newFilterConditions) {\n  return (dispatch) => {\n    dispatch({\n      type: WEB_UPDATE_FILTER_CONDITIONS,\n      filterConditions: newFilterConditions\n    });\n  };\n}\n\nexport function changeLoading(loading) {\n  return (dispatch) => {\n    dispatch({\n      type: WEB_CHANGE_LOADING,\n      loading: loading\n    });\n  };\n}\n\nexport function fetchTasks({deviceId, beginTime, endTime}) {\n  return (dispatch) => {\n    return fetchWebTaskApi(deviceId, beginTime, endTime)\n      .then(data => {\n        dispatch({\n          type: WEB_UPDATE_TASKS,\n          tasks: data\n        });\n      });\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { every, some } from \"lodash\";\nimport { parse } from \"qs\";\nimport moment from \"moment\";\nimport ListPage from \"../components/list-page/index\";\nimport { updateFilterConditions, fetchTasks, fetchInitData } from \"./redux/action\";\nimport {message} from \"antd\";\n\n\nexport class WebList extends Component {\n\n  componentDidCatch(error, errorInfo) {\n    message.error(\"页面异常！\");\n    this.props.history.replace(\"/\");\n  }\n\n  componentDidMount() {\n    const { updateFilterConditions, fetchTasks, fetchInitData } = this.props;\n\n    let params = {};\n    if (this.props.location) {\n       params = parse(this.props.location.search, { ignoreQueryPrefix: true });\n    }\n\n    const { deviceId, beginTime, endTime } = params;\n    if (some([deviceId, beginTime, endTime], item => item === void 0) && !every([deviceId, beginTime, endTime], item => item === void 0)) {\n      message.warn(\"url参数错误！获取默认日志列表\")\n    }\n    \n    updateFilterConditions({\n      deviceId: deviceId ? deviceId : \"\",\n      beginTime: beginTime ? moment(Number.parseInt(beginTime)).valueOf() : moment().startOf(\"day\").subtract(6, 'days').valueOf(),\n      endTime: endTime ? moment(Number.parseInt(endTime)).valueOf() : moment().startOf(\"day\").valueOf()\n    });\n\n    if (deviceId && beginTime && endTime) {\n      fetchTasks({\n        deviceId: deviceId,\n        beginTime: moment(Number.parseInt(beginTime)).valueOf(),\n        endTime: moment(Number.parseInt(endTime)).valueOf()\n      });\n    } else {\n      fetchInitData();\n    }\n  }\n\n  render() {\n    return (\n      <ListPage\n        {...this.props}\n        data-test=\"ListPage\"\n        type=\"web\"\n        detailUrlPrefix=\"/web-detail\"\n      />\n    )\n  }\n}\n\nexport function mapStateToProps(state) {\n  return {\n    ...state.webList\n  };\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    updateFilterConditions: newFilterConditions => dispatch(updateFilterConditions(newFilterConditions)),\n    fetchTasks: (filterConditions) => dispatch(fetchTasks(filterConditions)),\n    fetchInitData: () => dispatch(fetchInitData())\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WebList);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { parse } from \"qs\";\n\nimport {\n  fetchPageInitData,\n  fetchTaskDetail,\n  updateFilterConditions,\n  updateFocusLogId,\n  updateHighLightIndex,\n  updateSorted,\n  initState\n} from \"./redux/action\";\n\nimport LogDetailPage from \"../components/log-detail-page/index\";\nimport {message} from \"antd\";\n\nexport function mapStateToProps(state) {\n  return {\n    ...state.webLogDetail,\n    webListFilterConditions: state.webList.filterConditions\n  };\n}\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    fetchPageInitData: (taskId, focusLogId) => dispatch(fetchPageInitData(taskId, focusLogId)),\n    updateFocusLogId: topLogId => dispatch(updateFocusLogId(topLogId)),\n    updateFilterConditions: filterConditions => dispatch(updateFilterConditions(filterConditions)),\n    updateHighLightIndex: (start, end) => dispatch(updateHighLightIndex(start, end)),\n    fetchTaskDetail: (detailIds, direction) => dispatch(fetchTaskDetail(detailIds, direction)),\n    updateSorted: (sorted) => dispatch(updateSorted(sorted)),\n    initState: () => dispatch(initState())\n  };\n}\n\n\nexport class WebLogDetail extends Component{\n\n  componentDidCatch(error, errorInfo) {\n    message.error(\"页面异常！\");\n    this.props.history.replace(\"/\");\n  }\n\n  componentDidMount() {\n\n    const { initState } = this.props;\n    initState();\n\n    let params = {};\n    if (this.props.location) {\n      params = parse(this.props.location.search, { ignoreQueryPrefix: true });\n    }\n    const { tasks, focusLogId } = params;\n    this.props.fetchPageInitData(tasks, focusLogId);\n  }\n\n  render() {\n    return (\n      <LogDetailPage\n        data-test=\"WebLogDetailPage\"\n        {...this.props}\n        type=\"web\"\n      />\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WebLogDetail);","import {flattenDeep, sortBy, reverse} from \"lodash\";\nimport {\n  fetchWebBriefsApi,\n  fetchWebTaskDetailsByDetailIdsApi,\n  fetchWebTaskInfoByTaskIdApi,\n  fetchWebSingleLogDetailByLogIdApi\n} from \"../../../common/api\";\nimport {\n  WEB_UPDATE_LOG_INFO,\n  WEB_UPDATE_BRIEFS,\n  WEB_UPDATE_TASK_DETAIL,\n  WEB_UPDATE_LOG_DETAIL,\n  WEB_UPDATE_HIGH_LIGHT_INDEX,\n  WEB_UPDATE_FOCUS_LOG_ID,\n  WEB_UPDATE_LOGDETAIL_FILTER_CONDITIONS,\n  WEB_UPDATE_LOG_TYPES_IN_TASK,\n  WEB_INITIAL_STATE, WEB_UPDATE_SORTED\n} from \"./reducer\";\nimport {convertBriefsToLoglistInfiniteScrollBriefs} from \"../../../common/adapter\"\nimport {getPageOfLogIdsBySingleLogId} from \"../../../common/util\";\n\n\nexport function fetchPageInitData(taskId, focusLogId) {\n  return (dispatch, getState) => {\n    // 先请求日志类型、日志基本信息、日志概要列表\n    return Promise.all([\n      fetchWebTaskInfoByTaskIdApi(taskId),\n      fetchWebBriefsApi(taskId)\n    ])\n      .then(([infoData, briefData]) => {\n        briefData = flattenDeep(briefData);\n\n        const briefs = briefData.map(item => ({\n          id: item.detailId,\n          logType: item.logType,\n          logTime: item.logTime\n        }));\n\n        let detailIds = [];\n        if (briefs.length > 0) {\n          if (focusLogId) {\n            detailIds = getPageOfLogIdsBySingleLogId(briefs, focusLogId);\n          } else {\n            detailIds = getPageOfLogIdsBySingleLogId(briefs, briefs[0].id);\n          }\n        }\n        return Promise.all([infoData, briefData, detailIds]);\n      })\n      .then(([infoData, briefData, detailIds]) => {\n        return Promise.all([infoData, briefData, fetchWebTaskDetailsByDetailIdsApi(detailIds.join(','))]);\n      })\n      .then(([infoData, briefData, detailData]) => {\n        const logTypeInTask = [...new Set(briefData.map(brief => brief.logType))];\n        dispatch({\n          type: WEB_UPDATE_LOG_INFO,\n          logInfo: infoData\n        });\n        dispatch({\n          type: WEB_UPDATE_BRIEFS,\n          briefs: briefData\n        });\n        dispatch({\n          type: WEB_UPDATE_LOGDETAIL_FILTER_CONDITIONS,\n          filterConditions: {\n            ...getState().webLogDetail.filterConditions,\n            logTypes: logTypeInTask\n          }\n        });\n        dispatch({\n          type: WEB_UPDATE_LOG_TYPES_IN_TASK,\n          logTypesInTask: logTypeInTask\n        });\n        dispatch({\n          type: WEB_UPDATE_TASK_DETAIL,\n          taskDetails: detailData\n        });\n      });\n  };\n}\n\nexport function updateFocusLogId(focusLogId) {\n  console.log(`focusLogId: ${focusLogId}`)\n  return (dispatch, getState) => {\n    if (focusLogId === -1) {\n      dispatch({\n        type: WEB_UPDATE_LOG_DETAIL,\n        logDetail: null\n      });\n      dispatch({\n        type: WEB_UPDATE_FOCUS_LOG_ID,\n        focusLogId: focusLogId\n      });\n      return;\n    } \n\n    const state = getState();\n    const { briefs, taskDetails } = state.webLogDetail;\n    const detailIds = getPageOfLogIdsBySingleLogId(convertBriefsToLoglistInfiniteScrollBriefs(briefs, \"web\"), focusLogId);\n    \n    if (taskDetails.find(item => item.id === focusLogId) === undefined) {\n      return fetchWebTaskDetailsByDetailIdsApi(detailIds.join(\",\"))\n        .then(data => {\n          dispatch({\n            type: WEB_UPDATE_TASK_DETAIL,\n            taskDetails: data\n          });\n        })\n        .then(() => {\n          return fetchWebSingleLogDetailByLogIdApi(focusLogId);\n        })\n        .then(data => {\n          dispatch({\n            type: WEB_UPDATE_LOG_DETAIL,\n            logDetail: data\n          });\n        })\n        .then(() => {\n          dispatch({\n            type: WEB_UPDATE_FOCUS_LOG_ID,\n            focusLogId: focusLogId\n          });\n        })\n    } \n\n    return fetchWebSingleLogDetailByLogIdApi(focusLogId)\n      .then(data => {\n        dispatch({\n          type: WEB_UPDATE_LOG_DETAIL,\n          logDetail: data\n        });\n      })\n      .then(() => {\n        dispatch({\n          type: WEB_UPDATE_FOCUS_LOG_ID,\n          focusLogId: focusLogId\n        });\n      })\n    \n    \n  };\n}\n\nexport function updateFilterConditions(filterConditions) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: WEB_UPDATE_LOGDETAIL_FILTER_CONDITIONS,\n      filterConditions: filterConditions\n    });\n    const { logInfo } = getState().webLogDetail;\n    if (logInfo) {\n      return fetchWebBriefsApi(logInfo.taskId, filterConditions.logTypes.join(\",\"), filterConditions.keyword)\n        .then(data => {\n          let newBriefs = flattenDeep(data);\n          dispatch({\n            type: WEB_UPDATE_BRIEFS,\n            briefs: newBriefs\n          });\n          return newBriefs;\n        }).then(newBriefs => {\n          return fetchWebTaskDetailsByDetailIdsApi(newBriefs.map(item => item.detailId).join(\",\"))\n        }).then(data => {\n          dispatch({\n            type: WEB_UPDATE_TASK_DETAIL,\n            taskDetails: data\n          });\n        });\n    }\n  };\n}\n\nexport function updateHighLightIndex(start, end) {\n  return (dispatch) => {\n    dispatch({\n      type: WEB_UPDATE_HIGH_LIGHT_INDEX,\n      highlightStartIndex: start,\n      highlightEndIndex: end\n    });\n  };\n}\n\nexport function fetchTaskDetail(detailIds, direction) {\n  return (dispatch) => {\n    return fetchWebTaskDetailsByDetailIdsApi(detailIds.join(\",\"))\n      .then(data => {\n        dispatch({\n          type: WEB_UPDATE_TASK_DETAIL,\n          taskDetails: data,\n          direction: direction\n        });\n      });\n  };\n}\n\nexport function initState() {\n  return (dispatch) => {\n    dispatch({\n      type: WEB_INITIAL_STATE\n    })\n  }\n}\n\nexport function updateSorted(sorted) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: WEB_UPDATE_SORTED,\n      sorted: sorted\n    });\n\n    const { logInfo, filterConditions } = getState().webLogDetail;\n    if (logInfo) {\n      return fetchWebBriefsApi(logInfo.taskId, filterConditions.logTypes.join(\",\"), filterConditions.keyword)\n        .then(briefs => {\n          const newBriefs = flattenDeep(briefs);\n          let sortedBriefs = [];\n          if (sorted) {\n            sortedBriefs = sortBy(newBriefs, item => item.detailId);\n          } else {\n            sortedBriefs = sortBy(newBriefs, item => item.detailId);\n            sortedBriefs = reverse(sortedBriefs);\n          }\n          const detailIds = getPageOfLogIdsBySingleLogId(convertBriefsToLoglistInfiniteScrollBriefs(sortedBriefs, \"web\"), sortedBriefs[0].detailId);\n          return Promise.all([detailIds, sortedBriefs]);\n        }).then(([detailIds, sortedBriefs]) => {\n          return Promise.all([sortedBriefs, fetchWebTaskDetailsByDetailIdsApi(detailIds.join(\",\"))])\n        }).then(([sortedBriefs, data]) => {\n          dispatch({\n            type: WEB_UPDATE_BRIEFS,\n            briefs: sortedBriefs\n          });\n          dispatch({\n            type: WEB_UPDATE_HIGH_LIGHT_INDEX,\n            highlightStartIndex: -1,\n            highlightEndIndex: -1\n          });\n          dispatch({\n            type: WEB_UPDATE_FOCUS_LOG_ID,\n            focusLogId: -1\n          });\n          dispatch({\n            type: WEB_UPDATE_TASK_DETAIL,\n            taskDetails: data\n          });\n        });\n    }\n  };\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import \"antd/dist/antd.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport { isEqual } from \"lodash\";\nimport image from \"./new_logan_logo_white.png\";\nimport \"./style.scss\";\n\nclass Sider extends Component {\n\n  state = {\n    selectedKeys: [\"0\"]\n  };\n\n  render() {\n    return (\n      <Layout.Sider style={style.sider} trigger={null}>\n        <div>\n          <div className=\"sider-logo\" style={style.logo} />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"0\"]} selectedKeys={this.state.selectedKeys} onClick={this.handleMenuClick}>\n            <Menu.Item key=\"0\">\n              <Icon type=\"mobile\" />\n              <span>Native日志</span>\n            </Menu.Item>\n            <Menu.Item key=\"1\">\n              <Icon type=\"html5\" />\n              <span>Web日志</span>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </Layout.Sider>\n    );\n  }\n\n  componentDidMount() {\n    const {pathname} = this.props;\n    if (pathname === \"/native-list\" || pathname === \"/native-log-detail\") {\n      this.setState({\n        selectedKeys: [\"0\"]\n      });\n    } else if (pathname === \"/web-list\" || pathname === \"/web-detail\") {\n      this.setState({\n        selectedKeys: [\"1\"]\n      });\n    } else {\n      this.setState({\n        selectedKeys: [\"0\"]\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return !isEqual(nextState, this.state) || !isEqual(nextProps, this.props);\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {pathname} = this.props;\n    if (pathname === \"/native-list\" || pathname === \"/native-log-detail\") {\n      this.setState({\n        selectedKeys: [\"0\"]\n      });\n    } else if (pathname === \"/web-list\" || pathname === \"/web-detail\") {\n      this.setState({\n        selectedKeys: [\"1\"]\n      });\n    } else {\n      this.setState({\n        selectedKeys: [\"0\"]\n      });\n    }\n  }\n\n  handleMenuClick = ({ key }) => {\n    if (key === \"0\") {\n      window.location.hash = \"#/native-list\";\n      this.setState({\n        selectedKeys: [\"0\"]\n      });\n    } else if (key === \"1\") {\n      window.location.hash =\"#/web-list\";\n      this.setState({\n        selectedKeys: [\"1\"]\n      });\n    } else {\n      window.location.hash = \"#/native-list\";\n      this.setState({\n        selectedKeys: [\"0\"]\n      });\n    }\n  }\n}\n\nconst style = {\n  sider: {\n    height: \"100%\"\n  },\n  logo: {\n    backgroundImage: image,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    lineHeight: \"32px\",\n    height: \"80px\",\n    margin: \"5px\",\n    cursor: \"pointer\"\n  }\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    pathname: state.router.location.pathname,\n    search: state.router.location.search,\n    hash: state.router.location.hash,\n  }\n}\n\nexport default connect(mapStateToProps)(Sider);\n","import React, { Component } from \"react\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport {Layout} from \"antd\";\nimport {history} from \"./store\";\nimport NativeList from \"./views/native-list\";\nimport NativeLogDetail from \"./views/native-log-detail\";\nimport WebList from \"./views/web-list\";\nimport WebLogDetail from \"./views/web-detail\";\nimport Sider from \"./common/components/Sider/Sider\";\nimport \"antd/dist/antd.css\";\nimport \"./app.scss\";\n\nclass App extends Component {\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error);\n  }\n\n  render() {\n    return (\n      <ConnectedRouter history={history}>\n        <>\n          <Layout style={{height: \"100%\"}}>\n            <Sider/>\n            <div className=\"app\">\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/native-list\"/>\n                <Route exact path=\"/native-list\" component={NativeList}/>\n                <Route exact path=\"/native-log-detail\" component={NativeLogDetail}/>\n                <Route exact path=\"/web-list\" component={WebList}/>\n                <Route exact path=\"/web-detail\" component={WebLogDetail}/>\n              </Switch>\n            </div>\n          </Layout>\n        </>\n      </ConnectedRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}